@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager

@inject ConfigDataService configDataService
@inject ColumnConfigService columnConfigService

<div>
    <div class="container">
        <div class="row justify-content-end">
            <div class="col-auto buttonArea">
                <RadzenButton Icon="add" class="btnAdd" Text="Add Menu" Click="@(() => ShowColumnConfigPopupDialog(null))" />
            </div>
        </div>
    </div>

    <br />

    <div style="width:90%;margin:0px auto;">
        <div class="container">
            <div class="row justify-content-end">
                <div class="col-auto">
                    <label>Rows : </label>
                </div>
                <div class="col-auto">
                    <RadzenDropDown @bind-Value="inboxGrid.PageSize" TValue="int" AllowFiltering="true" Data="inboxGrid.PageSizeOption" Change="SearchInboxColumnConfigData" Style="width:50px" />
                </div>
            </div>
        </div>
        <RadzenGrid TItem="ColumnConfigDTO" @ref="inboxGrid.radzenGrid" Data="@SearchResultList" PageSize="inboxGrid.PageSize" ColumnWidth="200px" AllowPaging="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowSorting="true" AllowColumnResize="true">
            <Columns>
                <RadzenGridColumn TItem="ColumnConfigDTO" Property="tbc_id" Title="" Width="50px" Context="data">
                    <Template>
                        <RadzenButton Icon="edit" Style="background: #0A6839" Click="@(() => ShowColumnConfigPopupDialog(data))" />
                    </Template>
                </RadzenGridColumn>
                <RadzenGridColumn TItem="ColumnConfigDTO" Property="tbc_mnu_code" Title="tbc_mnu_code">
                    <FooterTemplate>
                        <label title="@inboxGrid.FooterLabelString">@inboxGrid.FooterLabelString</label>
                    </FooterTemplate>
                </RadzenGridColumn>
                <RadzenGridColumn TItem="ColumnConfigDTO" Property="tbc_column_name" Title="tbc_column_name" />
                <RadzenGridColumn TItem="ColumnConfigDTO" Property="tbc_column_label" Title="tbc_column_label" />
                <RadzenGridColumn TItem="ColumnConfigDTO" Property="tbc_column_placeholder" Title="tbc_column_placeholder" />
                <RadzenGridColumn TItem="ColumnConfigDTO" Property="tbc_required_field" Title="tbc_required_field" Context="data" Width="75px">
                    <Template>
                        @if (data.tbc_required_field == true)
                        {
                            <label>Active</label>
                        }
                        else
                        {
                            <label>Inactive</label>
                        }
                    </Template>
                </RadzenGridColumn>
                <RadzenGridColumn TItem="ColumnConfigDTO" Property="tbc_edit" Title="tbc_edit" Context="data" Width="75px">
                    <Template>
                        @if (data.tbc_edit == true)
                        {
                            <label>Active</label>
                        }
                        else
                        {
                            <label>Inactive</label>
                        }
                    </Template>
                </RadzenGridColumn>
                <RadzenGridColumn TItem="ColumnConfigDTO" Property="tbc_active" Title="tbc_active" Context="data" Width="75px">
                    <Template>
                        @if (data.tbc_active == true)
                        {
                            <label>Active</label>
                        }
                        else
                        {
                            <label>Inactive</label>
                        }
                    </Template>
                </RadzenGridColumn>
            </Columns>
        </RadzenGrid>
    </div>

    <br />

</div>

<hr />

@if (showPopupDialog)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">

                </div>
                <div class="modal-body">
                    <EditForm Model="@dataModel" OnInvalidSubmit="HandleColumnConfigInvalidSubmit" OnValidSubmit="HandleColumnConfigValidSubmit">
                        <DataAnnotationsValidator />

                        <div class="container inputArea">
                            <div class="row justify-content-center">
                                <InputBox ConfigData="@(new TBConfigDTO() { tbc_column_label = "tbc_mnu_code", tbc_edit = true })" classColumn="col-xl-12">
                                    @if (dataModel.tbc_status == "N")
                                    {
                                        <RadzenTextBox @bind-Value="@dataModel.tbc_mnu_code" Placeholder="กรอกได้เฉพาะ a-zA-Z0-9_-" />
                                        <ValidationMessage For="@(() => dataModel.tbc_mnu_code)" />
                                    }
                                    else
                                    {
                                        <RadzenTextBox @bind-Value="@dataModel.tbc_mnu_code" ReadOnly="true" />
                                    }
                                </InputBox>
                            </div>
                            <div class="row justify-content-center">
                                <InputBox ConfigData="@(new TBConfigDTO() { tbc_column_label = "tbc_column_name", tbc_edit = true })" classColumn="col-xl-12">
                                    <RadzenTextBox @bind-Value="@dataModel.tbc_column_name" />
                                    <ValidationMessage For="@(() => dataModel.tbc_column_name)" />
                                </InputBox>
                            </div>
                            <div class="row justify-content-center">
                                <InputBox ConfigData="@(new TBConfigDTO() { tbc_column_label = "tbc_column_label", tbc_edit = true })" classColumn="col-xl-12">
                                    <RadzenTextBox @bind-Value="@dataModel.tbc_column_label" />
                                </InputBox>
                            </div>
                            <div class="row justify-content-center">
                                <InputBox ConfigData="@(new TBConfigDTO() { tbc_column_label = "tbc_column_placeholder", tbc_edit = true })" classColumn="col-xl-12">
                                    <RadzenTextBox @bind-Value="@dataModel.tbc_column_placeholder" />
                                </InputBox>
                            </div>
                            <div class="row justify-content-center">
                                <InputBox ConfigData="@(new TBConfigDTO() { tbc_column_label = "tbc_required_field", tbc_edit = true })" classColumn="col-xl-12">
                                    <RadzenRadioButtonList @bind-Value="@dataModel.tbc_required_field" TValue="bool">
                                        <Items>
                                            <RadzenRadioButtonListItem Text="Active" Value="true" />
                                            <RadzenRadioButtonListItem Text="Inactive" Value="false" />
                                        </Items>
                                    </RadzenRadioButtonList>
                                </InputBox>
                            </div>
                            <div class="row justify-content-center">
                                <InputBox ConfigData="@(new TBConfigDTO() { tbc_column_label = "tbc_edit", tbc_edit = true })" classColumn="col-xl-12">
                                    <RadzenRadioButtonList @bind-Value="@dataModel.tbc_edit" TValue="bool">
                                        <Items>
                                            <RadzenRadioButtonListItem Text="Active" Value="true" />
                                            <RadzenRadioButtonListItem Text="Inactive" Value="false" />
                                        </Items>
                                    </RadzenRadioButtonList>
                                </InputBox>
                            </div>
                            <div class="row justify-content-center">
                                <InputBox ConfigData="@(new TBConfigDTO() { tbc_column_label = "tbc_active", tbc_edit = true })" classColumn="col-xl-12">
                                    <RadzenRadioButtonList @bind-Value="@dataModel.tbc_active" TValue="bool">
                                        <Items>
                                            <RadzenRadioButtonListItem Text="Active" Value="true" />
                                            <RadzenRadioButtonListItem Text="Inactive" Value="false" />
                                        </Items>
                                    </RadzenRadioButtonList>
                                </InputBox>
                            </div>
                            <div class="row justify-content-center">
                                <div class="col-xl-12">
                                    <div class="row justify-content-center divGroup buttonArea">
                                        <div class="col" style="text-align:right;">
                                            <RadzenButton class="btnCancel" Text="Cancel" Click="CloseColumnConfigPopup" />
                                        </div>
                                        <div class="col">
                                            <RadzenButton Icon="save" ButtonType="ButtonType.Submit" class="btnSave" Text="OK" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<Loading ShowModel="showLoading" />

@code {
    [Parameter] public List<ColumnConfigDTO> SearchResultList { get; set; }

    private string classLabel = "col-4";
    private string classInput = "col-8";
    private bool showPopupDialog;
    private bool showLoading;

    private RadzenGridCustom<ColumnConfigDTO> inboxGrid = new RadzenGridCustom<ColumnConfigDTO>();
    //private List<ColumnConfigDTO> searchResultList;

    private ColumnConfigDTO dataModel = new ColumnConfigDTO();


    private async Task SearchInboxColumnConfigData()
    {
        showLoading = true;
        StateHasChanged();

        if (inboxGrid.radzenGrid != null) inboxGrid.radzenGrid.GoToPage(0);

        showLoading = false;
        StateHasChanged();
    }

    private void ShowColumnConfigPopupDialog(ColumnConfigDTO selectModel)
    {
        if (selectModel == null)
        {
            dataModel = new ColumnConfigDTO()
            {
                tbc_status = "N",
                tbc_active = true
            };
        }
        else
        {
            dataModel = selectModel;
            dataModel.tbc_status = "E";
        }

        // Open the Popup
        showPopupDialog = true;

        StateHasChanged();
    }

    private void CloseColumnConfigPopup()
    {
        // Close the Popup
        dataModel = new ColumnConfigDTO();
        showPopupDialog = false;

        StateHasChanged();
    }

    private void HandleColumnConfigInvalidSubmit()
    {

    }

    private async void HandleColumnConfigValidSubmit()
    {
        var confirmResult = await jsRuntime.InvokeAsync<bool>("ShowConfirm", "Do you want to save data?");
        if (confirmResult)
        {
            showLoading = true;
            StateHasChanged();

            if (dataModel.tbc_status == "N")
            {
                //Check duplicate
                //var duplicate = searchResultList_All.Where(x => x.mnu_code == searchModel.mnu_code).ToList(); ;

                if (SearchResultList.Any(x => x.tbc_mnu_code == dataModel.tbc_mnu_code && x.tbc_column_name == dataModel.tbc_column_name))
                {
                    await jsRuntime.InvokeAsync<object>("ShowAlert", "Duplicate code.");

                    showLoading = false;
                    StateHasChanged();

                    return;
                }
            }

            //Save data
            var saveResult = columnConfigService.SaveDataAsync(dataModel);

            await jsRuntime.InvokeAsync<object>("ShowAlert", "Save data complete.");

            CloseColumnConfigPopup();

            showLoading = false;
            StateHasChanged();
        }
    }
}
