@page "/Report/AntiHospData"

@using ALISS.Data.D6_Report.Antibiogram
@using ALISS.ANTIBIOGRAM.DTO
@using ALISS.Master.DTO
@using Radzen
@using Radzen.Blazor

@inject ReportService ReportService
@inject DialogService dialogService
@inject ConfigDataService configDataService
@inject NavigationManager navigationManager
@inject DropDownListDataService ddlDataService
@inject OrganismService organismService
@inject SpecimenService specimenService

<div>
    <div class="divHead">
        Antibiogram - ระดับโรงพยาบาล
    </div>
</div>

@if (gridDatas == null)
{
    <p><em>Loading...</em></p>
    <Loading ShowModel="true" />
}
else
{
<div class="container inputArea">
    <br />
    <div class="row justify-content-start">
        <div class="col-12 col-xl-4">
            <div class="row justify-content-start divGroup">
                <div class="@classLabel">
                    <LabelBox inputLabel="@configData.Get_Label("rpt_anthosp_monthfrom")" />
                </div>
                <div class="@classMonth">
                    <RadzenDropDown AllowClear="false" TValue="int" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    Placeholder="Select..."
                                    AllowFiltering="false" @bind-Value=@iMonthFrom
                                    Data="@MonthData" TextProperty="MonthName" ValueProperty="MonthValue" />
                </div>
                <div style="width:80px; vertical-align: middle;display: inline-block">
                    <RadzenNumeric TValue="int" Min="2000" Max="9999" @bind-Value=@iYearFrom />
                </div>
            </div>
        </div>

        <div class="col-12 col-xl-4">
            <div class="row justify-content-center divGroup">
                <div class="@classLabel">
                    <LabelBox inputLabel="@configData.Get_Label("rpt_anthosp_monthto")" />
                </div>
                <div class="@classMonth">
                    <RadzenDropDown AllowClear="false" TValue="int" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    Placeholder="Select..."
                                    AllowFiltering="false" @bind-Value=@iMonthTo
                                    Data="@MonthData" TextProperty="MonthName" ValueProperty="MonthValue" />
                </div>
                <div style="width:80px; vertical-align: middle;display: inline-block">
                    <RadzenNumeric TValue="int" Min="2000" Max="9999" @bind-Value=@iYearTo />
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-start">

        @*<InputBox ConfigData="@(configData.Get_ConfigRow("rpt_anthosp_hospcode"))">
                <RadzenDropDown @bind-Value="searchAnti.hos_code" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                AllowClear="true" TValue="string" AllowFiltering="true" Placeholder="Select..."
                                Data="lab_ddl_List.Select(x => new { x.arh_code, x.arh_name, x.prv_code, x.prv_name, x.hos_code, x.hos_name }).Where(x => (searchAnti.arh_code == null || x.arh_code == searchAnti.arh_code) && (searchAnti.prv_code == null || x.prv_code == searchAnti.prv_code))"
                                ValueProperty="hos_code" TextProperty="hos_name" Change="@(args => DDL_Change("Hos", args))" />
            </InputBox>

            <InputBox ConfigData="@(configData.Get_ConfigRow("rpt_anthosp_provcode"))">
                <RadzenDropDown @bind-Value="searchAnti.prv_code" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                AllowClear="true" TValue="string" AllowFiltering="true" Placeholder="Select..."
                                Data="lab_ddl_List.Select(x => new { x.arh_code, x.arh_name, x.prv_code, x.prv_name }).Where(x => (searchAnti.arh_code == null || x.arh_code == searchAnti.arh_code)).Distinct()" ValueProperty="prv_code" TextProperty="prv_name" Change="@(args => DDL_Change("Prv", args))" />
            </InputBox>

            <InputBox ConfigData="@(configData.Get_ConfigRow("rpt_anthosp_arhcode"))">
                <RadzenDropDown @bind-Value="searchAnti.arh_code" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                AllowClear="true" TValue="string" AllowFiltering="true" Placeholder="Select..."
                                Data="lab_ddl_List.Select(x => new { x.arh_code, x.arh_name }).Distinct().OrderBy(o=>o.arh_code)" ValueProperty="arh_code" TextProperty="arh_name" Change="@(args => DDL_Change("Arh", args))" />
            </InputBox>*@
        <div class="col-12 col-xl-4">
            <div class="row justify-content-center divGroup">
                <div class="@classLabel">
                    <LabelBox inputLabel="@configData.Get_Label("rpt_anthosp_hospcode")" />
                </div>
                <div class="@classInput">
                    <RadzenDropDown @bind-Value="searchAnti.hos_code" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    AllowClear="true" TValue="string" AllowFiltering="true" Placeholder="Select..."
                                    Data="lab_ddl_List.Select(x => new { x.arh_code, x.arh_name, x.prv_code, x.prv_name, x.hos_code, x.hos_name }).Where(x => (searchAnti.arh_code == null || x.arh_code == searchAnti.arh_code) && (searchAnti.prv_code == null || x.prv_code == searchAnti.prv_code))"
                                    ValueProperty="hos_code" TextProperty="hos_name" Change="@(args => DDL_Change("Hos", args))" 
                                    Disabled="(!string.IsNullOrEmpty(mainLayout.loginUser.hos_code))"/>
                </div>
            </div>
        </div>
        <div class="col-12 col-xl-4">
            <div class="row justify-content-center divGroup">
                <div class="@classLabel">
                    <LabelBox inputLabel="@configData.Get_Label("rpt_anthosp_provcode")" />
                </div>
                <div class="@classInput">
                    <RadzenDropDown @bind-Value="searchAnti.prv_code" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    AllowClear="true" TValue="string" AllowFiltering="true" Placeholder="Select..."
                                    Data="lab_ddl_List.Select(x => new { x.arh_code, x.arh_name, x.prv_code, x.prv_name }).Where(x => (searchAnti.arh_code == null || x.arh_code == searchAnti.arh_code)).Distinct()" ValueProperty="prv_code" TextProperty="prv_name" Change="@(args => DDL_Change("Prv", args))" 
                                    Disabled="(!string.IsNullOrEmpty(mainLayout.loginUser.prv_code))"/>
                </div>
            </div>
        </div>
        <div class="col-12 col-xl-4">
            <div class="row justify-content-center divGroup">
                <div class="@classLabel">
                    <LabelBox inputLabel="@configData.Get_Label("rpt_anthosp_arhcode")" />
                </div>
                <div class="@classInput">
                    <RadzenDropDown @bind-Value="searchAnti.arh_code" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    AllowClear="true" TValue="string" AllowFiltering="true" Placeholder="Select..."
                                    Data="lab_ddl_List.Select(x => new { x.arh_code, x.arh_name }).Distinct().OrderBy(o=>o.arh_code)" ValueProperty="arh_code" TextProperty="arh_name" Change="@(args => DDL_Change("Arh", args))" 
                                    Disabled="(!string.IsNullOrEmpty(mainLayout.loginUser.arh_code))"/>
                </div>

            </div>
        </div>
    </div>

    <div class="row justify-content-start">

        <div class="col-12 col-xl-4">
            <div class="row justify-content-center divGroup">
                <div class="@classLabel">
                    <LabelBox inputLabel="@configData.Get_Label("rpt_anthosp_gramstain")" />
                </div>
                <div class="@classInput">
                    <RadzenDropDown AllowClear="true" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    @bind-Value=@searchAnti.gram AllowFiltering="true" Placeholder="Select..."
                                    Data="@GramstainData" TextProperty="GramstainData" ValueProperty="GramstainData" />
                </div>
            </div>
        </div>
        <div class="col-12 col-xl-4">
            <div class="row justify-content-center divGroup">
                <div class="@classLabel">
                    <LabelBox inputLabel="@configData.Get_Label("rpt_anthosp_specimen")" />
                </div>
                <div class="@classInput">
                    <RadzenDropDown AllowClear="true" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    @bind-Value=@searchAnti.spc_code AllowFiltering="true" Placeholder="Select..."
                                    Data="@SpecimenMaster" TextProperty="spc_name" ValueProperty="spc_code" />
                </div>
            </div>
        </div>
        <div class="col-12 col-xl-4">
            <div class="row justify-content-center divGroup">
                <div class="@classLabel">
                    <LabelBox inputLabel="@configData.Get_Label("rpt_anthosp_org")" />
                </div>
                <div class="@classInput">
                    <RadzenDropDown AllowClear="true" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    @bind-Value=@searchAnti.org_code AllowFiltering="true" Placeholder="Select..."
                                    Data="@OrganismGroupMaster" TextProperty="org_organism_label" ValueProperty="org_macro_name" />
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-end">

        <div class="col-12 col-xl-4">
            <div class="row justify-content-center divGroup buttonArea">
                <div class="col-auto">
                    <RadzenButton class="btnSearch" Text="Search" Click="SearchData" />
                </div>
                <div class="col-auto">
                    <RadzenButton class="btnClear" Text="Clear" Click="ClearData" />
                </div>
            </div>
        </div>
    </div>

</div>

    <hr />
    <div>
        @*@if (!blnFirstOpen)
        {*@
        <div style="width:100%;margin:0px auto;">
            <div class="container">
                <div class="row justify-content-end">
                    <div class="col-auto">
                        <label>Rows : </label>
                    </div>
                    <div class="col-auto">
                        <RadzenDropDown @bind-Value="inboxGrid.PageSize" TValue="int" AllowFiltering="true" Data="inboxGrid.PageSizeOption" Change="SearchData" Style="width:50px" />
                    </div>
                </div>
            </div>
            <RadzenGrid TItem="AntibiogramDataDTO" @ref="inboxGrid.radzenGrid" Data="@gridDatas" AllowPaging="true" AllowFiltering="true" AllowSorting="true" PageSize="@inboxGrid.PageSize" ColumnWidth="120px" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowColumnResize="true">
                <Columns>
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="prv_name" Title="จังหวัด">
                        <FooterTemplate>
                            <label title="@inboxGrid.FooterLabelString">@inboxGrid.FooterLabelString</label>
                        </FooterTemplate>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="arh_name" Title="เขตสุขภาพ" />
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="hos_name" Title="โรงพยาบาล" />
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="gram" Title="Gramstain" /> @*Width="150px"*@
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="spc_name" Title="ชนิดสิ่งส่งตรวจ" />
                    @*<RadzenGridColumn TItem="AntibiogramDataDTO" Property="total_isolate" Title="จำนวนส่งตรวจ" /> Width="150px"*@
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="total_org" Title="จำนวนเชื้อที่พบ" />@*Width="150px"*@
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="org_name" Title="เชื้อ" Width="200px" />
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="anti_name" Title="ชื่อยา" /> @*Width="250px"*@
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="total_drug_test" Title="จำนวนทดสอบยา" />@*Width="100px"*@
                    <RadzenGridColumn TItem="AntibiogramDataDTO" Property="percent_s" Title="%S" Width="100px"/> @*Width="70px"*@
                </Columns>
            </RadzenGrid>
        </div>
        @*}*@


    </div>
    <hr />
}

@code {
    [CascadingParameter] MainLayout mainLayout { get; set; }
    private const string MENU_CODE = "MNU_0701";
    private ConfigData configData = new ConfigData();
    private string classLabel = "col-4";
    private string classInput = "col-8";
    private string classMonth = "col-4";
    private List<HospitalLabDataDTO> lab_ddl_List;
    private RadzenGridCustom<AntibiogramDataDTO> inboxGrid = new RadzenGridCustom<AntibiogramDataDTO>();

    private List<AntibiogramDataDTO> gridDatas;
    private List<MasterDataDTO> AreaHealthData;
    private List<MasterDataDTO> ProvinceData;
    AntiHospitalSearchDTO searchAnti = new AntiHospitalSearchDTO();

    IEnumerable<string> GramstainData = new string[] { "Positive", "Negative" };
    private List<SpecimenDTO> SpecimenMaster = new List<SpecimenDTO>();
    private List<OrganismDTO> OrganismMaster = new List<OrganismDTO>();
    private List<OrganismGroupDTO> OrganismGroupMaster = new List<OrganismGroupDTO>();
    private int iMonthFrom = 1;
    private int iMonthTo = DateTime.Today.Month;
    private int iYearFrom = DateTime.Today.Year;
    private int iYearTo = DateTime.Today.Year;
    private DateTime dtStartDate;
    private DateTime dtEndDate;
    private bool blnFirstOpen = true;
    private List<DropDownListDTO> month_List;
    private List<DropDownListDTO> year_List;

    private class MonthItem
    {
        public int MonthValue { get; set; }
        public string MonthName { get; set; }
    }

    MonthItem[] MonthData = new MonthItem[] {
        new MonthItem
        {
            MonthValue = 1,
            MonthName = "มกราคม"
        },
        new MonthItem
        {
           MonthValue = 2,
           MonthName = "กุมภาพันธ์"
        },
        new MonthItem
        {
          MonthValue = 3,
          MonthName = "มีนาคม"
        },
        new MonthItem
        {
           MonthValue = 4,
           MonthName = "เมษายน"
        },
        new MonthItem
        {
           MonthValue = 5,
           MonthName = "พฤษภาคม"
        },
        new MonthItem
        {
            MonthValue = 6,
            MonthName = "มิถุนายน"
        },
        new MonthItem
        {
           MonthValue = 7,
            MonthName = "กรกฎาคม"
        },
        new MonthItem
        {
           MonthValue = 8,
            MonthName = "สิงหาคม"
        },
        new MonthItem
        {
            MonthValue = 9,
            MonthName = "กันยายน"
        },
        new MonthItem
        {
           MonthValue = 10,
            MonthName = "ตุลาคม"
        },
        new MonthItem
        {
            MonthValue = 11,
            MonthName = "พฤศจิกายน"
        },
        new MonthItem
        {
           MonthValue = 12,
           MonthName = "ธันวาคม"
        }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await mainLayout.GetLoginUser();

            if (mainLayout.loginUser.CheckPagePermission(MENU_CODE) == false) navigationManager.NavigateTo("/NoPermissionPage");

            configData.ConfigDTOList = await configDataService.Get_TBConfig_DataList_Async(new TBConfigDTO() { tbc_mnu_code = MENU_CODE });

            var searchData = new HospitalLabDataDTO()
            {
                arh_code = searchAnti.arh_code = mainLayout.loginUser.arh_code,
                prv_code = searchAnti.prv_code = mainLayout.loginUser.prv_code,
                hos_code = searchAnti.hos_code = mainLayout.loginUser.hos_code,
            };

            lab_ddl_List = await ddlDataService.GetAllLabListByModelAsync(searchData);
            var objspecimen = await specimenService.GetListByModelActiveAsync(new SpecimenDTO());
            objspecimen.Add(new SpecimenDTO{ spc_code = "A", spc_name = "All Specimen"} );
            SpecimenMaster = objspecimen.OrderBy(w => w.spc_code).ToList();

            month_List = ddlDataService.GetMonthList();
            year_List = ddlDataService.GetYearList();

            //OrganismMaster = await organismService.GetListByModelActiveAsync(new OrganismDTO());

            OrganismGroupMaster = await ReportService.GetOrganismGroupAsync();

            gridDatas = await ReportService.GetListByModelAsync(searchAnti);
        }

    }

    private async Task SearchData()
    {
        dtStartDate = new DateTime(iYearFrom, iMonthFrom, 1);

        int numberOfDays = DateTime.DaysInMonth(iYearTo, iMonthTo);
        dtEndDate = new DateTime(iYearTo, iMonthTo, numberOfDays);

        searchAnti.start_date = dtStartDate;
        searchAnti.end_date = dtEndDate;
        gridDatas = null;
        StateHasChanged();

        gridDatas = await ReportService.GetListByModelAsync(searchAnti);
        if (inboxGrid.radzenGrid != null) inboxGrid.radzenGrid.GoToPage(0);

        blnFirstOpen = false;
        StateHasChanged();
    }

    private async Task ClearData()
    {
        searchAnti.arh_code = mainLayout.loginUser.arh_code;
        searchAnti.prv_code = mainLayout.loginUser.prv_code;
        searchAnti.hos_code = mainLayout.loginUser.hos_code;

        searchAnti.spc_code = null;
        searchAnti.gram = null;
        searchAnti.org_code = null;
        StateHasChanged();

        await SearchData();
    }

    private void DDL_Change(string ddl_name, object value)
    {
        if (ddl_name == "Arh" && value == null)
        {
            searchAnti.prv_code = null;
            searchAnti.hos_code = null;
        }
        else if (ddl_name == "Prv" && value == null)
        {
            searchAnti.hos_code = null;
        }
        else if (ddl_name == "Prv" && value != null)
        {
            var prv_select = lab_ddl_List.FirstOrDefault(x => x.prv_code == value.ToString());

            searchAnti.arh_code = prv_select.arh_code;
        }
        else if (ddl_name == "Hos" && value == null)
        {
            //searchModel.mps_lab = null;
        }
        else if (ddl_name == "Hos" && value != null)
        {
            var hos_select = lab_ddl_List.FirstOrDefault(x => x.hos_code == value.ToString());

            searchAnti.prv_code = hos_select.prv_code;
            searchAnti.arh_code = hos_select.arh_code;
        }

        StateHasChanged();
    }
}
