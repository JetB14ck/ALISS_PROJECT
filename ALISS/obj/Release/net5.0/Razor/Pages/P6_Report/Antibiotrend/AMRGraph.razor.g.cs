#pragma checksum "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "060a9dfacb4f5649d25aa0ab035067b87e4f8ff3"
// <auto-generated/>
#pragma warning disable 1591
namespace ALISS.Pages.P6_Report.Antibiotrend
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.HttpOverrides;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Blazored.Menu;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using BlazorDownloadFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.Account;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.DropDownList.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.LoginManagement.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Master.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Process.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.AUTH.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.MasterManagement.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.UserManagement.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.HISUpload.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 35 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.ANTIBIOGRAM.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 37 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.GLASS.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 39 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D0_Master;

#line default
#line hidden
#nullable disable
#nullable restore
#line 41 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D3_Process;

#line default
#line hidden
#nullable disable
#nullable restore
#line 42 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D4_UserManagement.AUTH;

#line default
#line hidden
#nullable disable
#nullable restore
#line 43 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D4_UserManagement.MasterManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 44 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D4_UserManagement.UserManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 46 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D5_HISData;

#line default
#line hidden
#nullable disable
#nullable restore
#line 47 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D6_Report.Antibiogram;

#line default
#line hidden
#nullable disable
#nullable restore
#line 49 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D6_Report.Glass;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
using ALISS.Data.D6_Report.Antibiotrend;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
using ALISS.ANTIBIOTREND.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
using ALISS.EXPORT.Library.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
using System.Data.SqlClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
using System.Configuration;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Antibiotrend/AMRGraph")]
    public partial class AMRGraph : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<div style=\"width: 100%;\"><div class=\"divHead\">\r\n        แนวโน้ม AMR ระดับประเทศ\r\n    </div></div>");
#nullable restore
#line 31 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
 if (!blnLoadComplete)
{

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<ALISS.Shared.Loading>(1);
            __builder.AddAttribute(2, "ShowModel", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 33 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                        true

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
#nullable restore
#line 34 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"

}
else
{

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenFieldset>(3);
            __builder.AddAttribute(4, "Text", "Filter");
            __builder.AddAttribute(5, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenElement(6, "div");
                __builder2.AddAttribute(7, "class", "row justify-content-between");
                __builder2.OpenElement(8, "div");
                __builder2.AddAttribute(9, "class", "col-md-4");
                __builder2.OpenElement(10, "h5");
                __builder2.AddContent(11, 
#nullable restore
#line 51 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 configData.Get_Label("rpt_graph_xaxis")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(12, "\r\n            ");
                __builder2.AddContent(13, 
#nullable restore
#line 52 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
             configData.Get_Label("rpt_graph_yearfrom")

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(14, "\r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenNumeric<int>>(15);
                __builder2.AddAttribute(16, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Decimal?>(
#nullable restore
#line 53 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                             9999

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(17, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Decimal?>(
#nullable restore
#line 53 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                        1900

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(18, "style", "width: 30%;");
                __builder2.AddAttribute(19, "Name", "from_year");
                __builder2.AddAttribute(20, "Change", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<int>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<int>(this, 
#nullable restore
#line 53 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                                    (args) => ChangeSubGraph()

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(21, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<int>(
#nullable restore
#line 53 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                iYearFrom

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(22, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<int>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<int>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => iYearFrom = __value, iYearFrom))));
                __builder2.AddAttribute(23, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<int>>>(() => iYearFrom));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(24, "\r\n\r\n            ");
                __builder2.AddContent(25, 
#nullable restore
#line 55 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
             configData.Get_Label("rpt_graph_yearto")

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(26, "\r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenNumeric<int>>(27);
                __builder2.AddAttribute(28, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Decimal?>(
#nullable restore
#line 56 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                             9999

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(29, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Decimal?>(
#nullable restore
#line 56 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                        1900

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(30, "style", "width: 30%;");
                __builder2.AddAttribute(31, "Name", "to_year");
                __builder2.AddAttribute(32, "Change", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<int>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<int>(this, 
#nullable restore
#line 56 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                                (args) => ChangeSubGraph()

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(33, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<int>(
#nullable restore
#line 56 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                              iYearTo

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(34, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<int>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<int>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => iYearTo = __value, iYearTo))));
                __builder2.AddAttribute(35, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<int>>>(() => iYearTo));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(36, "\r\n            <br><br>");
                __builder2.CloseElement();
                __builder2.AddMarkupContent(37, "\r\n        ");
                __builder2.OpenElement(38, "div");
                __builder2.AddAttribute(39, "class", "col-md-4");
                __builder2.OpenElement(40, "h5");
                __builder2.AddContent(41, 
#nullable restore
#line 61 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 configData.Get_Label("rpt_graph_yaxis")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(42, "\r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenRadioButtonList<eSIRValue>>(43);
                __builder2.AddAttribute(44, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<eSIRValue>(
#nullable restore
#line 62 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                selectedSIRValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(45, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<eSIRValue>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<eSIRValue>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => selectedSIRValue = __value, selectedSIRValue))));
                __builder2.AddAttribute(46, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<eSIRValue>>>(() => selectedSIRValue));
                __builder2.AddAttribute(47, "Items", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenRadioButtonListItem_0(__builder3, 48, 49, "%S", 50, 
#nullable restore
#line 64 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                eSIRValue.S

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(51, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenRadioButtonListItem_1(__builder3, 52, 53, "%I", 54, 
#nullable restore
#line 65 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                eSIRValue.I

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(55, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenRadioButtonListItem_2(__builder3, 56, 57, "%R", 58, 
#nullable restore
#line 66 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                eSIRValue.R

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(59, "\r\n            <br><br>");
                __builder2.CloseElement();
                __builder2.AddMarkupContent(60, "\r\n        ");
                __builder2.OpenElement(61, "div");
                __builder2.AddAttribute(62, "class", "col-md-4");
                __builder2.OpenElement(63, "h5");
                __builder2.AddContent(64, 
#nullable restore
#line 73 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 configData.Get_Label("rpt_graph_format")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(65, "\r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenRadioButtonList<eGraphFormat>>(66);
                __builder2.AddAttribute(67, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<eGraphFormat>(
#nullable restore
#line 74 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                selectedGraphFormat

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(68, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<eGraphFormat>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<eGraphFormat>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => selectedGraphFormat = __value, selectedGraphFormat))));
                __builder2.AddAttribute(69, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<eGraphFormat>>>(() => selectedGraphFormat));
                __builder2.AddAttribute(70, "Items", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenRadioButtonListItem_3(__builder3, 71, 72, "Line", 73, 
#nullable restore
#line 76 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                  eGraphFormat.Line

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(74, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenRadioButtonListItem_4(__builder3, 75, 76, "Bar", 77, 
#nullable restore
#line 77 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                 eGraphFormat.Bar

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(78, "\r\n            <br><br>");
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(79, "\r\n\r\n    ");
                __builder2.OpenElement(80, "div");
                __builder2.AddAttribute(81, "class", "row justify-content-between");
                __builder2.OpenElement(82, "div");
                __builder2.AddAttribute(83, "class", "col-md-4");
                __builder2.OpenElement(84, "h5");
                __builder2.AddContent(85, 
#nullable restore
#line 91 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 configData.Get_Label("rpt_graph_organism")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(86, "\r\n                ");
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenListBox_5(__builder2, 87, 88, 
#nullable restore
#line 92 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                               true

#line default
#line hidden
#nullable disable
                , 89, 
#nullable restore
#line 92 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                            FilterCaseSensitivity.CaseInsensitive

#line default
#line hidden
#nullable disable
                , 90, 
#nullable restore
#line 92 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                                                               true

#line default
#line hidden
#nullable disable
                , 91, 
#nullable restore
#line 92 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                                                                            OrgLabelName

#line default
#line hidden
#nullable disable
                , 92, "margin-bottom: 20px; height:300px; width:350px", 93, 
#nullable restore
#line 92 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                                multipleSelectedOrg

#line default
#line hidden
#nullable disable
                , 94, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => multipleSelectedOrg = __value, multipleSelectedOrg)), 95, () => multipleSelectedOrg);
                __builder2.CloseElement();
                __builder2.AddMarkupContent(96, "\r\n        ");
                __builder2.OpenElement(97, "div");
                __builder2.AddAttribute(98, "class", "col-md-4");
                __builder2.OpenElement(99, "h5");
                __builder2.AddContent(100, 
#nullable restore
#line 99 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 configData.Get_Label("rpt_graph_antibiotic")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(101, "\r\n            ");
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenListBox_6(__builder2, 102, 103, 
#nullable restore
#line 100 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                           true

#line default
#line hidden
#nullable disable
                , 104, 
#nullable restore
#line 100 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                        FilterCaseSensitivity.CaseInsensitive

#line default
#line hidden
#nullable disable
                , 105, 
#nullable restore
#line 100 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                                                            true

#line default
#line hidden
#nullable disable
                , 106, 
#nullable restore
#line 100 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                                                                         AntibioticMaster

#line default
#line hidden
#nullable disable
                , 107, "ant_name", 108, "ant_code", 109, "margin-bottom: 20px; height:300px; width:350px", 110, 
#nullable restore
#line 100 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                            multipleSelectedAnti

#line default
#line hidden
#nullable disable
                , 111, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => multipleSelectedAnti = __value, multipleSelectedAnti)), 112, () => multipleSelectedAnti);
                __builder2.CloseElement();
                __builder2.AddMarkupContent(113, "\r\n        ");
                __builder2.OpenElement(114, "div");
                __builder2.AddAttribute(115, "class", "col-md-4");
                __builder2.OpenElement(116, "h5");
                __builder2.AddContent(117, 
#nullable restore
#line 107 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 configData.Get_Label("rpt_graph_subgraph")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(118, "\r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenRadioButtonList<eSubGraph>>(119);
                __builder2.AddAttribute(120, "Change", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<eSubGraph>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<eSubGraph>(this, 
#nullable restore
#line 108 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                              (args) => ChangeSubGraph()

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(121, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<eSubGraph>(
#nullable restore
#line 108 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                selectedSubGraph

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(122, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<eSubGraph>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<eSubGraph>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => selectedSubGraph = __value, selectedSubGraph))));
                __builder2.AddAttribute(123, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<eSubGraph>>>(() => selectedSubGraph));
                __builder2.AddAttribute(124, "Items", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenRadioButtonListItem_7(__builder3, 125, 126, "Specimen", 127, 
#nullable restore
#line 110 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                      eSubGraph.Specimen

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(128, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenRadioButtonListItem_8(__builder3, 129, 130, "Ward Type", 131, 
#nullable restore
#line 111 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                       eSubGraph.Ward

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(132, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenRadioButtonListItem_9(__builder3, 133, 134, "None", 135, 
#nullable restore
#line 112 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                  eSubGraph.None

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(136, "\r\n            \r\n            <div class=\"row\"></div>\r\n            ");
                __builder2.OpenElement(137, "div");
                __builder2.AddAttribute(138, "class", "row");
#nullable restore
#line 120 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 if (selectedSubGraph == eSubGraph.Specimen)
                {

#line default
#line hidden
#nullable disable
                __builder2.OpenElement(139, "div");
                __builder2.AddAttribute(140, "class", "col-md-6");
                __builder2.AddMarkupContent(141, "<br><br>\r\n                        ");
                __builder2.OpenElement(142, "h6");
                __builder2.AddContent(143, 
#nullable restore
#line 124 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                             configData.Get_Label("rpt_graph_specimenlist")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(144, "\r\n                        ");
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenListBox_10(__builder2, 145, 146, 
#nullable restore
#line 125 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                       true

#line default
#line hidden
#nullable disable
                , 147, 
#nullable restore
#line 125 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                              true

#line default
#line hidden
#nullable disable
                , 148, 
#nullable restore
#line 125 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                           SpecimenMaster

#line default
#line hidden
#nullable disable
                , 149, "spc_name", 150, "spc_code", 151, "margin-bottom: 50px; height:200px; background-color : transparent", 152, 
#nullable restore
#line 125 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                          multipleSelectedSpecimen

#line default
#line hidden
#nullable disable
                , 153, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => multipleSelectedSpecimen = __value, multipleSelectedSpecimen)), 154, () => multipleSelectedSpecimen);
                __builder2.CloseElement();
#nullable restore
#line 128 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 129 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 if (selectedSubGraph == eSubGraph.Ward)
                {

#line default
#line hidden
#nullable disable
                __builder2.OpenElement(155, "div");
                __builder2.AddAttribute(156, "class", "col-md-6");
                __builder2.AddMarkupContent(157, "<br><br>\r\n                        ");
                __builder2.OpenElement(158, "h6");
                __builder2.AddContent(159, 
#nullable restore
#line 133 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                             configData.Get_Label("rpt_graph_wardlist")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(160, "\r\n                        ");
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenListBox_11(__builder2, 161, 162, 
#nullable restore
#line 134 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                       true

#line default
#line hidden
#nullable disable
                , 163, 
#nullable restore
#line 134 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                              true

#line default
#line hidden
#nullable disable
                , 164, 
#nullable restore
#line 134 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                           WardTypeMaster

#line default
#line hidden
#nullable disable
                , 165, "margin-bottom: 50px; height:200px; background-color : transparent", 166, 
#nullable restore
#line 134 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                          multipleSelectedWardType

#line default
#line hidden
#nullable disable
                , 167, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => multipleSelectedWardType = __value, multipleSelectedWardType)), 168, () => multipleSelectedWardType);
                __builder2.CloseElement();
#nullable restore
#line 137 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                }

#line default
#line hidden
#nullable disable
                __builder2.CloseElement();
                __builder2.AddMarkupContent(169, "\r\n            <br><br>");
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(170, "\r\n\r\n    ");
                __builder2.OpenElement(171, "div");
                __builder2.AddAttribute(172, "class", "row justify-content-between buttonArea");
                __builder2.OpenElement(173, "div");
                __builder2.AddAttribute(174, "class", "col-6");
                __builder2.OpenElement(175, "div");
                __builder2.AddAttribute(176, "class", "row justify-content-start divGroup buttonArea");
                __builder2.OpenElement(177, "div");
                __builder2.AddAttribute(178, "class", "col-auto");
                __builder2.OpenComponent<Radzen.Blazor.RadzenButton>(179);
                __builder2.AddAttribute(180, "class", "btnDownload");
                __builder2.AddAttribute(181, "Text", "Export");
                __builder2.AddAttribute(182, "Click", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 147 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                            ExportFile

#line default
#line hidden
#nullable disable
                )));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(183, "\r\n        ");
                __builder2.OpenElement(184, "div");
                __builder2.AddAttribute(185, "class", "col-6");
                __builder2.OpenElement(186, "div");
                __builder2.AddAttribute(187, "class", "row justify-content-end divGroup buttonArea");
                __builder2.OpenElement(188, "div");
                __builder2.AddAttribute(189, "class", "col-auto");
                __builder2.OpenComponent<Radzen.Blazor.RadzenButton>(190);
                __builder2.AddAttribute(191, "class", "btnSearch");
                __builder2.AddAttribute(192, "Text", "Graph Result");
                __builder2.AddAttribute(193, "Click", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 154 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                GraphResult

#line default
#line hidden
#nullable disable
                )));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(194, "\r\n                ");
                __builder2.OpenElement(195, "div");
                __builder2.AddAttribute(196, "class", "col-auto");
                __builder2.OpenComponent<Radzen.Blazor.RadzenButton>(197);
                __builder2.AddAttribute(198, "class", "btnClear");
                __builder2.AddAttribute(199, "Text", "Clear");
                __builder2.AddAttribute(200, "Click", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 157 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                        ClearData

#line default
#line hidden
#nullable disable
                )));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
#nullable restore
#line 166 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
     if (!blnExportComplete)
    {

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<ALISS.Shared.Loading>(201);
                __builder2.AddAttribute(202, "ShowModel", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 168 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                            true

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
#nullable restore
#line 169 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
    }

#line default
#line hidden
#nullable disable
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 173 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
     if (blnLoadData == true)
    {

        

#line default
#line hidden
#nullable disable
#nullable restore
#line 176 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
         if (selectedGraphFormat == eGraphFormat.Line)
        {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(203, "h1");
            __builder.AddContent(204, 
#nullable restore
#line 178 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 TitleChart

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(205, "\r\n            ");
            __builder.OpenElement(206, "div");
            __builder.AddAttribute(207, "class", "row");
#nullable restore
#line 181 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 if (dictSubMain.Count > 0)
                {
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 183 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                     foreach (var ppMain in dictSubMain.Keys)
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(208, "div");
            __builder.AddAttribute(209, "class", "col-md-6 col-sm-12 p-4");
            __builder.OpenElement(210, "h1");
            __builder.AddContent(211, 
#nullable restore
#line 186 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                 ppMain

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
#nullable restore
#line 187 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                             if (dictSubMain[ppMain].Values.All(a => a.All(f => f.SIR == 0)))
                            {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenTextBox>(212);
            __builder.AddAttribute(213, "Style", "vertical-align:middle; text-align:center");
            __builder.AddAttribute(214, "Value", "No Data");
            __builder.CloseComponent();
#nullable restore
#line 190 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                            }
                            else
                            {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenChart>(215);
            __builder.AddAttribute(216, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
#nullable restore
#line 194 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                     foreach (var series in dictSubMain[ppMain])
                                    {                              

#line default
#line hidden
#nullable disable
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenLineSeries_12(__builder2, 217, 218, 
#nullable restore
#line 196 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                 series.Value

#line default
#line hidden
#nullable disable
                , 219, "Year", 220, 
#nullable restore
#line 196 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                               series.Key

#line default
#line hidden
#nullable disable
                , 221, 
#nullable restore
#line 196 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                                     Radzen.Blazor.LineType.Dashed

#line default
#line hidden
#nullable disable
                , 222, "SIR", 223, (__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenCategoryAxis>(224);
                    __builder3.AddAttribute(225, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 197 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                      1

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(226, "\r\n                                            ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenMarkers>(227);
                    __builder3.AddAttribute(228, "MarkerType", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Radzen.Blazor.MarkerType>(
#nullable restore
#line 198 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                       MarkerType.Square

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                );
#nullable restore
#line 200 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                    }                           

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(229);
                __builder2.AddAttribute(230, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 201 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                              0

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(231, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 201 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                      100

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(232, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 201 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                 20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(233, "\r\n                                        ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenCategoryAxis>(234);
                __builder2.AddAttribute(235, "Padding", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 202 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                     20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(236, "\r\n                                        ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(237);
                __builder2.AddAttribute(238, "Formatter", new System.Func<System.Object, System.String>(
#nullable restore
#line 203 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                     FormatValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(239, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenGridLines>(240);
                    __builder3.AddAttribute(241, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 204 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                      true

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(242, "\r\n                                            ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenAxisTitle>(243);
                    __builder3.AddAttribute(244, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 205 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                    SIRText

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 208 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                            }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 211 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 211 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                     
                }
                else
                {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(245, "div");
            __builder.AddAttribute(246, "class", "col-md-6 col-sm-12 p-4");
#nullable restore
#line 216 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                     if (@dictSeries.Values.All(a => a.All(f => f.SIR == 0)))
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenTextBox>(247);
            __builder.AddAttribute(248, "Style", "vertical-align:middle; text-align:center");
            __builder.AddAttribute(249, "Value", "No Data");
            __builder.CloseComponent();
#nullable restore
#line 219 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                    }
                    else
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenChart>(250);
            __builder.AddAttribute(251, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
#nullable restore
#line 223 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                             foreach (var pp in dictSeries)
                            {                         

#line default
#line hidden
#nullable disable
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenLineSeries_13(__builder2, 252, 253, 
#nullable restore
#line 225 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                         pp.Value

#line default
#line hidden
#nullable disable
                , 254, "Year", 255, 
#nullable restore
#line 225 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                   pp.Key

#line default
#line hidden
#nullable disable
                , 256, 
#nullable restore
#line 225 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                     Radzen.Blazor.LineType.Dashed

#line default
#line hidden
#nullable disable
                , 257, "SIR", 258, (__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenCategoryAxis>(259);
                    __builder3.AddAttribute(260, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 226 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                              1

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(261, "\r\n                                    ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenMarkers>(262);
                    __builder3.AddAttribute(263, "MarkerType", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Radzen.Blazor.MarkerType>(
#nullable restore
#line 227 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                               MarkerType.Square

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                );
#nullable restore
#line 229 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                            }                     

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(264);
                __builder2.AddAttribute(265, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 230 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                      0

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(266, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 230 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                              100

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(267, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 230 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                         20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(268, "\r\n                                ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenCategoryAxis>(269);
                __builder2.AddAttribute(270, "Padding", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 231 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                             20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(271, "\r\n                                ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(272);
                __builder2.AddAttribute(273, "Formatter", new System.Func<System.Object, System.String>(
#nullable restore
#line 232 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                             FormatValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(274, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenGridLines>(275);
                    __builder3.AddAttribute(276, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 233 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                              true

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(277, "\r\n                                    ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenAxisTitle>(278);
                    __builder3.AddAttribute(279, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 234 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                            SIRText

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 237 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 239 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 241 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 243 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
         if (selectedGraphFormat == eGraphFormat.Bar)
        {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(280, "h1");
            __builder.AddContent(281, 
#nullable restore
#line 245 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 TitleChart

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(282, "\r\n            ");
            __builder.OpenElement(283, "div");
            __builder.AddAttribute(284, "class", "row");
#nullable restore
#line 248 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                 if (dictSubMain.Count > 0)
                {
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 250 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                     foreach (var ppMain in dictSubMain.Keys)
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(285, "div");
            __builder.AddAttribute(286, "class", "col-md-6 col-sm-12 p-4");
            __builder.OpenElement(287, "h1");
            __builder.AddContent(288, 
#nullable restore
#line 253 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                             ppMain

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
#nullable restore
#line 254 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                         if (dictSubMain[ppMain].Values.All(a => a.All(f => f.SIR == 0)))
                        {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenTextBox>(289);
            __builder.AddAttribute(290, "Style", "vertical-align:middle; text-align:center");
            __builder.AddAttribute(291, "Value", "No Data");
            __builder.CloseComponent();
#nullable restore
#line 257 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                        }
                        else
                        {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenChart>(292);
            __builder.AddAttribute(293, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
#nullable restore
#line 261 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                 foreach (var series in dictSubMain[ppMain])
                                {

#line default
#line hidden
#nullable disable
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenColumnSeries_14(__builder2, 294, 295, 
#nullable restore
#line 263 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                               series.Value

#line default
#line hidden
#nullable disable
                , 296, "Year", 297, 
#nullable restore
#line 263 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                            series.Key

#line default
#line hidden
#nullable disable
                , 298, 
#nullable restore
#line 263 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                                 Radzen.Blazor.LineType.Dashed

#line default
#line hidden
#nullable disable
                , 299, "SIR");
#nullable restore
#line 266 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                }

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<Radzen.Blazor.RadzenColumnOptions>(300);
                __builder2.AddAttribute(301, "Radius", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 267 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                             5

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(302, "\r\n                                ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(303);
                __builder2.AddAttribute(304, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 268 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                      0

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(305, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 268 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                              100

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(306, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 268 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                         20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(307, "\r\n                                ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(308);
                __builder2.AddAttribute(309, "Formatter", new System.Func<System.Object, System.String>(
#nullable restore
#line 269 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                             FormatValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(310, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenGridLines>(311);
                    __builder3.AddAttribute(312, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 270 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                              true

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(313, "\r\n                                    ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenAxisTitle>(314);
                    __builder3.AddAttribute(315, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 271 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                            SIRText

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 274 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                        }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 276 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 276 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                     
                }

                else
                {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(316, "div");
            __builder.AddAttribute(317, "class", "col-md-6 col-sm-12 p-4");
#nullable restore
#line 282 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                     if (@dictSeries.Values.All(a => a.All(f => f.SIR == 0)))
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenTextBox>(318);
            __builder.AddAttribute(319, "Style", "vertical-align:middle; text-align:center");
            __builder.AddAttribute(320, "Value", "No Data");
            __builder.CloseComponent();
#nullable restore
#line 285 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                    }
                    else
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenChart>(321);
            __builder.AddAttribute(322, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
#nullable restore
#line 289 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                             foreach (var series in dictSeries)
                            {

#line default
#line hidden
#nullable disable
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph.TypeInference.CreateRadzenColumnSeries_15(__builder2, 323, 324, 
#nullable restore
#line 291 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                           series.Value

#line default
#line hidden
#nullable disable
                , 325, "Year", 326, 
#nullable restore
#line 291 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                        series.Key

#line default
#line hidden
#nullable disable
                , 327, 
#nullable restore
#line 291 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                                                                             Radzen.Blazor.LineType.Dashed

#line default
#line hidden
#nullable disable
                , 328, "SIR");
#nullable restore
#line 294 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                            }

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(329);
                __builder2.AddAttribute(330, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 295 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                  0

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(331, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 295 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                          100

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(332, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 295 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                                     20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(333, "\r\n                            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenColumnOptions>(334);
                __builder2.AddAttribute(335, "Radius", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 296 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                         5

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(336, "\r\n                            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(337);
                __builder2.AddAttribute(338, "Formatter", new System.Func<System.Object, System.String>(
#nullable restore
#line 297 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                         FormatValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(339, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenGridLines>(340);
                    __builder3.AddAttribute(341, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 298 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                          true

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(342, "\r\n                                ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenAxisTitle>(343);
                    __builder3.AddAttribute(344, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 299 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                                                        SIRText

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 302 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 304 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 307 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 307 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
         
    }

    

#line default
#line hidden
#nullable disable
#nullable restore
#line 313 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
       
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 317 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraph.razor"
       

    [CascadingParameter] MainLayout mainLayout { get; set; }
    private const string MENU_CODE = "MNU_0705";
    private ConfigData configData = new ConfigData();
    private string classLabel = "col-md-4";
    private List<ColumnConfigDTO> searchColumnConfigResultList;

    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();
    private int iYearFrom = (DateTime.Today.Year - 5);
    private int iYearTo = DateTime.Today.Year;
    private eSIRValue selectedSIRValue = eSIRValue.S;
    private eSubGraph selectedSubGraph = eSubGraph.None;
    private eGraphFormat selectedGraphFormat = eGraphFormat.Line;
    private string SIRText;
    private Boolean blnLoadData = false;
    private Boolean blnLoadComplete = false;
    private Boolean blnExportComplete = true;
    private Boolean blnShowSubGraphList = false;

    ElementReference ContentToRender;
    private String strHTML;
    private string TitleChart;
    private eSubGraph LoadAMRData = eSubGraph.NA;

    private List<SP_AntimicrobialResistanceDTO> AMRData;
    SP_AntimicrobialResistanceSearchDTO searchAMR = new SP_AntimicrobialResistanceSearchDTO();
    private AMRGraphSearchDTO modelExport = new AMRGraphSearchDTO();

    private string titleChart;
    private string chartName1;
    private string chartName2;
    IEnumerable<string> multipleSelectedOrg = new string[] { };
    IEnumerable<string> multipleSelectedAnti = new string[] { };
    IEnumerable<string> multipleSelectedSpecimen = new string[] { };
    IEnumerable<string> multipleSelectedWardType = new string[] { };
    private List<SpecimenDTO> SpecimenMaster = new List<SpecimenDTO>();
    //private List<OrganismDTO> OrganismMaster = new List<OrganismDTO>();
    private List<AntibioticNameDTO> AntibioticMaster = new List<AntibioticNameDTO>();

    private SpecimenDTO ActiveSpcimen = new SpecimenDTO();
    private OrganismDTO ActiveOrganism = new OrganismDTO();
    private AntibioticDTO ActiveAntibiotic = new AntibioticDTO();
    private MasterTemplateDTO ActiveMasterTemplate = new MasterTemplateDTO();

    List<string> WardTypeMaster = new List<string> { "opd", "ipd", "icu" };
    //List<string> SpecimenMasteruu = new List<string> { "bl", "ur", "st", "sp" };
    private List<OrganismGroupDTO> OrganismGroupMaster = new List<OrganismGroupDTO>();
    List<string> OrgLabelName = new List<string> ();
    List<string> AntiLabelName = new List<string> ();
    private bool blnUpdate = false;

    IEnumerable<DataReport> enumData = new DataReport[] { };

    private enum eGraphFormat
    {
        Line = 1,
        Bar = 2,
        Pie = 3
    }

    private enum eSubGraph
    {
        Specimen = 1,
        Ward = 2,
        None = 0,
        NA = -1

    }

    private enum eSIRValue
    {
        S = 1,
        I = 2,
        R = 3
    }

    class DataReport
    {
        public string Year { get; set; }
        public double SIR { get; set; }
    }

    private Dictionary<string, IEnumerable<DataReport>> dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
    private Dictionary<string, Dictionary<string, IEnumerable<DataReport>>> dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
    private Dictionary<string, Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>> dictDrugMain = new Dictionary<string, Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>>();

    class clsOrganism
    {
        public string org_code { get; set; }
        public string org_name { get; set; }
    }

    class clsAntibiotic
    {
        public string anti_code { get; set; }
        public string anti_name { get; set; }
    }

    clsAntibiotic[] antiDump = new clsAntibiotic[]
    {
        new clsAntibiotic
        {
            anti_code = "AMX",
            anti_name = "Amoxicillin"
        },
         new clsAntibiotic
        {
            anti_code = "CEC",
            anti_name = "Cefaclor"
        },
          new clsAntibiotic
        {
            anti_code = "OXA",
            anti_name = "Oxacillin"
        },
           new clsAntibiotic
        {
            anti_code = "PEN",
            anti_name = "Penicillin G"
        },
            new clsAntibiotic
        {
            anti_code = "PTZ",
            anti_name = "Pentizidone"
        },
            new clsAntibiotic
        {
            anti_code = "RAM",
            anti_name = "Ramoplanin"
        },
            new clsAntibiotic
        {
            anti_code = "VAN",
            anti_name = "Vancomycin"
        }
                                        };

    clsOrganism[] orgDump = new clsOrganism[]
    {
        new clsOrganism
        {
            org_code = "alc",
            org_name = "Alcaligenes sp."
        },
        new clsOrganism
        {
            org_code = "bde",
            org_name = "Bacteroides denticola"
        },
        new clsOrganism
        {
            org_code = "shf",
            org_name = "Streptococcus hyointestinalis"
        },
        new clsOrganism
        {
            org_code = "sal",
            org_name = "Salmonella sp."
        },
        new clsOrganism
        {
            org_code = "vic",
            org_name = "Vibrio cholerae"
        },
        new clsOrganism
        {
            org_code = "ent",
            org_name = "Enterococcus sp."
        },
        new clsOrganism
        {
            org_code = "ngo",
            org_name = "Neisseria gonorrhoeae"
        }
                    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await mainLayout.GetLoginUser();

            if (mainLayout.loginUser.CheckPagePermission(MENU_CODE) == false) navigationManager.NavigateTo("/NoPermissionPage");

            configData.ConfigDTOList = await configDataService.Get_TBConfig_DataList_Async(new TBConfigDTO() { tbc_mnu_code = MENU_CODE });

            ActiveMasterTemplate = await masterTemplateService.GetListByModelActiveAsync(new MasterTemplateSearchDTO());
            ActiveSpcimen.spc_mst_code = ActiveOrganism.org_mst_code = ActiveAntibiotic.ant_mst_code = ActiveMasterTemplate.mst_code;

            SpecimenMaster = await specimenService.GetListByModelActiveAsync(ActiveSpcimen);
            //OrganismMaster = await organismService.GetListByModelActiveAsync(ActiveOrganism);
            // var ant = await antibioticService.GetListByModelActiveAsync(ActiveAntibiotic);
            //AntibioticMaster = ant.Where(w => !string.IsNullOrEmpty(w.ant_mst_WHON5_CODE)).ToList();
            AntibioticMaster = await ReportService.GetAntibioticNameAsync();
            AntiLabelName = AntibioticMaster.Select(s => s.ant_name).Distinct().ToList();
            //var org = await antihosp.GetOrganismGroupAsync();
            //OrganismGroupMaster = org.Where(w => string.IsNullOrEmpty(w.organism_sub)).ToList();

            //OrganismGroupMaster = await antihosp.GetOrganismGroupNameAsync();
            OrganismGroupMaster = await antihosp.GetOrganismGroupAsync();
            OrgLabelName = OrganismGroupMaster.Select(s=>s.org_organism_label).Distinct().ToList();

            searchAMR.start_year = iYearFrom;
            searchAMR.end_year = iYearTo;

            //searchColumnConfigResultList = await columnConfigService.GetListByModelAsync(new ColumnConfigSearchDTO() { sch_mnu_code = MENU_CODE });

            //AMRData = await ReportService.GetAMROverallModelAsync(searchAMR);
            blnLoadComplete = true;

        }
    }

    private async Task ClearGraph()
    {
        dictSeries.Clear();
        dictSubMain.Clear();
        dictDrugMain.Clear();

        blnLoadData = false;
        StateHasChanged();
    }

    private async Task ClearData()
    {
        iYearFrom = (DateTime.Today.Year - 5);
        iYearTo = DateTime.Today.Year;

        searchAMR.start_year = iYearFrom;
        searchAMR.end_year = iYearTo;

        multipleSelectedOrg = new string[] { };
        multipleSelectedAnti = new string[] { };

        selectedSubGraph = eSubGraph.None;
        selectedGraphFormat = eGraphFormat.Line;
        selectedSIRValue = eSIRValue.S;

        await ClearGraph();
    }

    async void ExportFile()
    {
        blnExportComplete = false;
        modelExport.start_year = searchAMR.start_year;
        modelExport.end_year = searchAMR.end_year;
        if (selectedSIRValue == eSIRValue.S)
        {
            modelExport.sir = "S";
        }
        else if (selectedSIRValue == eSIRValue.I)
        {
            modelExport.sir = "I";
        }
        else
        {
            modelExport.sir = "R";
        }
        modelExport.graph_format = (int)selectedGraphFormat;
        modelExport.sub_graph = (int)selectedSubGraph;
        modelExport.organism = multipleSelectedOrg;
        modelExport.antibiotic = multipleSelectedAnti;
        modelExport.wardlist = multipleSelectedWardType; // opd,ipd,icu
        modelExport.specimenlist = multipleSelectedSpecimen; // SpcCode

        string OutputFileName = string.Format("{0}-{1}_{2}"
                                                       , modelExport.start_year
                                                       , modelExport.end_year
                                                       , "AMRGraph.pdf");

        string statuscode = await ReportService.ExportGraphFileDataAsync(modelExport, "N",OutputFileName);
        if (statuscode == "OK")
        {
            
            string ServerFileName = "ANTIBIOTREND" + "/" + DateTime.Today.ToString("yyyyMMdd") + "/" + OutputFileName;
            string contentType = "application/pdf";

            await OIFileSave.DownloadFile(ServerFileName, OutputFileName, contentType);

        }
        else if (statuscode == "ERR_PATH")
        {
            await JSRuntime.InvokeAsync<object>("ShowAlert", "ไม่พบ Config PATH กรุณาติดต่อผู้ดูแลระบบ");
        }
        else
        {
            await JSRuntime.InvokeAsync<object>("ShowAlert", "File not Found");
        }
        blnExportComplete = true;
    }

    private async Task GraphResult()
    {
        if ((multipleSelectedOrg.Count() == 0) || (multipleSelectedAnti.Count() == 0)){
            await JSRuntime.InvokeAsync<object>("ShowAlert", "Please select Organism and Antibiotic");
        }
        else
        {
            if (iYearFrom != 0 && iYearTo != 0)
            {
                blnLoadComplete = false;
                await ClearGraph();

                searchAMR.start_year = iYearFrom;
                searchAMR.end_year = iYearTo;

                // y-axis
                if (selectedSIRValue == eSIRValue.S)
                {
                    SIRText = "%S";
                    TitleChart = "Susceptibility of ";
                }
                else if (selectedSIRValue == eSIRValue.I)
                {
                    SIRText = "%I";
                    TitleChart = "Intermediate of ";
                }
                else
                {
                    SIRText = "%R";
                    TitleChart = "Resistance of ";
                }

                // 1 or หลาย เชื้อ : 1 ยา >> series เชื้อ
                if (multipleSelectedOrg.Count() > 0 && multipleSelectedAnti.Count() == 1)
                {
                    DataReport dtReport = new DataReport { };
                    List<DataReport> EnumList = new List<DataReport>();
                    List<SP_AntimicrobialResistanceDTO> objAMRSearchResult;

                    dictSeries.Clear();
                    dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                    var antiName = AntibioticMaster.Find(f => f.ant_code == multipleSelectedAnti.FirstOrDefault()).ant_name;

                    if (selectedSubGraph == eSubGraph.None)
                    {
                        if (!blnUpdate)
                        {
                            AMRData = await ReportService.GetAMROverallModelAsync(searchAMR);
                            LoadAMRData = selectedSubGraph;
                            blnUpdate = true;
                        }

                        objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                               && (multipleSelectedOrg.Contains(w.org_name))
                                               && (multipleSelectedAnti.Contains(w.anti_code))
                                               ).OrderBy(o => o.org_code).ToList();

                        foreach(var objOrg in multipleSelectedOrg)
                        {
                            if (!dictSeries.ContainsKey(objOrg))
                            {
                                EnumList = new List<DataReport>();
                                for (var i = iYearFrom; i <= iYearTo; i++)
                                {
                                    var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                    EnumList.Add(newdata);
                                }
                                dictSeries.Add(objOrg, EnumList);
                            }
                        }

                        foreach (var obj in objAMRSearchResult)
                        {

                            var obe = dictSeries[obj.org_name].Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                            if (obe != null)
                            {
                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s;}
                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                else { obe.SIR = obj.percent_r; }
                            }
                        }

                        var title = string.Join(" and ", multipleSelectedOrg);
                        chartName1 = multipleSelectedOrg.FirstOrDefault();
                        TitleChart = TitleChart + antiName;//+ " to " + title
                    }

                    // have sub graph
                    else
                    {
                        if (selectedSubGraph == eSubGraph.Specimen)
                        {

                            if (multipleSelectedSpecimen.Count() == 0)
                            {
                                await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 Specimen");
                                goto EndPoint;
                            }

                            dictSeries.Clear();
                            dictSubMain.Clear();
                            dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                            dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
                            List<SP_AntimicrobialResistanceDTO> objSpc = new List<SP_AntimicrobialResistanceDTO>();

                            if (!blnUpdate)
                            {
                                AMRData = await ReportService.GetAMRSpecimenModelAsync(searchAMR);
                                LoadAMRData = selectedSubGraph;
                                blnUpdate = true;
                            }
                            objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                   && (multipleSelectedOrg.Contains(w.org_name))
                                                   && (multipleSelectedAnti.Contains(w.anti_code))
                                                   ).OrderBy(o => o.org_code).ToList();

                            foreach (var orgn in multipleSelectedOrg)
                            {
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                var orgName = orgn;
                                if (!dictSubMain.ContainsKey(orgName)) { dictSubMain.Add(orgName, dictSeries); }

                                foreach (var spcCode in multipleSelectedSpecimen)
                                {
                                    objSpc = objAMRSearchResult.Where(w => w.org_name == orgn
                                                                        && w.spc_code == spcCode
                                                                        ).ToList();

                                    chartName1 = orgn;
                                    EnumList = new List<DataReport>();
                                    for (var i = iYearFrom; i <= iYearTo; i++)
                                    {
                                        var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                        EnumList.Add(newdata);
                                    }
                                    var spcName = SpecimenMaster.Find(t => t.spc_code == spcCode).spc_name;
                                    dictSeries.Add(spcName, EnumList);

                                    foreach (var obj in objSpc)
                                    {
                                        var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                        if (obe != null)
                                        {
                                            if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                            else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                            else { obe.SIR = obj.percent_r; }
                                        }

                                    } // end objSpc1
                                }
                            }
                            // ------ Find Description ------
                            //var SelectedOrgDesc = new List<string>();
                            //foreach (var SelectedOrgCode in multipleSelectedOrg)
                            //{
                            //    var desc = OrganismGroupMaster.Find(t => t.organisms == SelectedOrgCode);
                            //    if (desc != null) { SelectedOrgDesc.Add(desc.grp_organism_label); }
                            //    else { SelectedOrgDesc.Add(SelectedOrgCode); }
                            //}

                            var SelectdAntiDesc = new List<string>();
                            foreach (var SelectedAntiCode in multipleSelectedAnti)
                            {
                                var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                                if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                                else { SelectdAntiDesc.Add(SelectedAntiCode); }
                            }

                            var title = string.Format("{0} to {1} by Specimen", SelectdAntiDesc.FirstOrDefault(), string.Join(",", multipleSelectedOrg));
                            TitleChart = TitleChart + title;
                        } // end sub graph : specimen

                        if (selectedSubGraph == eSubGraph.Ward)
                        {
                            if (multipleSelectedWardType.Count() == 0)
                            {
                                await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 Ward Type");
                                goto EndPoint;
                            }

                            dictSeries.Clear();
                            dictSubMain.Clear();
                            dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                            dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
                            List<SP_AntimicrobialResistanceDTO> objWard = new List<SP_AntimicrobialResistanceDTO>();

                            if (!blnUpdate)
                            {
                                AMRData = await ReportService.GetAMRWardTypeModelAsync(searchAMR);
                                LoadAMRData = selectedSubGraph;
                                blnUpdate = true;
                            }
                            objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                   && (multipleSelectedOrg.Contains(w.org_name))
                                                   && (multipleSelectedAnti.Contains(w.anti_code))
                                                   ).OrderBy(o => o.org_code).ToList();
                            foreach (var orgn in multipleSelectedOrg)
                            {
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                var orgName = orgn;
                                if (!dictSubMain.ContainsKey(orgName))
                                {
                                    dictSubMain.Add(orgName, dictSeries);
                                }

                                foreach (var wardCode in multipleSelectedWardType)
                                {
                                    objWard = objAMRSearchResult.Where(w => w.org_name == orgn
                                                                        && w.ward_type == wardCode
                                                                        ).ToList();

                                    chartName1 = orgn;
                                    EnumList = new List<DataReport>();
                                    for (var i = iYearFrom; i <= iYearTo; i++)
                                    {
                                        var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                        EnumList.Add(newdata);
                                    }

                                    dictSeries.Add(wardCode, EnumList);

                                    foreach (var obj in objWard)
                                    {
                                        var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                        if (obe != null)
                                        {
                                            if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                            else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                            else { obe.SIR = obj.percent_r; }
                                        }

                                    } // end objSpc1

                                }
                            }
                            // ------ Find Description ------
                            //var SelectedOrgDesc = new List<string>();
                            //foreach (var SelectedOrgCode in multipleSelectedOrg)
                            //{
                            //    var desc = OrganismGroupMaster.Find(t => t.organisms == SelectedOrgCode);
                            //    if (desc != null) { SelectedOrgDesc.Add(desc.grp_organism_label); }
                            //    else { SelectedOrgDesc.Add(SelectedOrgCode); }
                            //}

                            var SelectdAntiDesc = new List<string>();
                            foreach (var SelectedAntiCode in multipleSelectedAnti)
                            {
                                var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                                if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                                else { SelectdAntiDesc.Add(SelectedAntiCode); }
                            }

                            var title = string.Format("{0} to {1} by Ward Type", SelectdAntiDesc.FirstOrDefault(), string.Join(",", multipleSelectedOrg));
                            TitleChart = TitleChart + title;
                        } // end sub graph : Ward Type
                    }
                }

                // 1 เชื้อ : หลาย ยา >> series ยา
                else if (multipleSelectedOrg.Count() == 1 && multipleSelectedAnti.Count() > 1)
                {

                    var orgName = multipleSelectedOrg.FirstOrDefault(); //OrganismGroupMaster.Find(f => f.organisms == multipleSelectedOrg.FirstOrDefault()).grp_organism_label;

                    List<SP_AntimicrobialResistanceDTO> objAMRSearchResult;

                    DataReport dtReport = new DataReport { };
                    List<DataReport> EnumList = new List<DataReport>();
                    dictSeries.Clear();
                    dictSeries = new Dictionary<string, IEnumerable<DataReport>>();

                    if (selectedSubGraph == eSubGraph.None)
                    {
                        if (!blnUpdate)
                        {
                            AMRData = await ReportService.GetAMROverallModelAsync(searchAMR);
                            LoadAMRData = selectedSubGraph;
                            blnUpdate = true;
                        }

                        //searchAMR.org_codes = string.Join(",", multipleSelectedOrg);
                        //searchAMR.anti_codes = string.Join(",", multipleSelectedAnti);
                        objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                               && (multipleSelectedOrg.Contains(w.org_name))
                                               && (multipleSelectedAnti.Contains(w.anti_code))
                                               ).OrderBy(o => o.anti_code).ToList();

                        foreach(var objAntCode in multipleSelectedAnti)
                        {
                            var drugName = AntibioticMaster.Find(f => f.ant_code == objAntCode).ant_name;
                            if (!dictSeries.ContainsKey(drugName))
                            {
                                EnumList = new List<DataReport>();
                                for (var i = iYearFrom; i <= iYearTo; i++)
                                {
                                    var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                    EnumList.Add(newdata);
                                }
                                dictSeries.Add(drugName, EnumList);
                            }
                        }


                        foreach (var objAMR in objAMRSearchResult)
                        {
                            var obe = dictSeries[objAMR.anti_name.ToUpper()].Where(w => w.Year == objAMR.year.ToString()).FirstOrDefault();
                            if (obe != null)
                            {
                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = objAMR.percent_s; }
                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = objAMR.percent_i; }
                                else { obe.SIR = objAMR.percent_r; }
                            }
                        }

                        var title = string.Join(" and ", multipleSelectedOrg);
                        chartName1 = multipleSelectedOrg.FirstOrDefault();
                        TitleChart = TitleChart + title;
                    }

                    else
                    {
                        if (selectedSubGraph == eSubGraph.Specimen)
                        {

                            if (multipleSelectedSpecimen.Count() == 0)
                            {
                                await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 specimen");
                                goto EndPoint;
                            }

                            dictSeries.Clear();
                            dictSubMain.Clear();
                            dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                            dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
                            List<SP_AntimicrobialResistanceDTO> objSpc = new List<SP_AntimicrobialResistanceDTO>();

                            if (!blnUpdate)
                            {
                                AMRData = await ReportService.GetAMRSpecimenModelAsync(searchAMR);
                                LoadAMRData = selectedSubGraph;
                                blnUpdate = true;
                            }
                            //searchAMR.org_codes = string.Join(",", multipleSelectedOrg);
                            //searchAMR.anti_codes = string.Join(",", multipleSelectedAnti);
                            objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                              && (multipleSelectedOrg.Contains(w.org_name))
                                              && (multipleSelectedAnti.Contains(w.anti_code))
                                              ).OrderBy(o => o.anti_code).ToList();

                            foreach (var drug in multipleSelectedAnti)
                            {
                                var drugName = AntibioticMaster.Find(f => f.ant_code == drug).ant_name;
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                if (!dictSubMain.ContainsKey(drugName))
                                {
                                    dictSubMain.Add(drugName, dictSeries);
                                }

                                foreach (var spcCode in multipleSelectedSpecimen)
                                {
                                    objSpc = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()
                                                                        && w.spc_code == spcCode
                                                                        ).ToList();

                                    chartName1 = drug;
                                    EnumList = new List<DataReport>();
                                    for (var i = iYearFrom; i <= iYearTo; i++)
                                    {
                                        var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                        EnumList.Add(newdata);
                                    }
                                    var spcName = SpecimenMaster.Find(t => t.spc_code == spcCode).spc_name;
                                    dictSeries.Add(spcName, EnumList);

                                    foreach (var obj in objSpc)
                                    {
                                        var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                        if (obe != null)
                                        {
                                            if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                            else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                            else { obe.SIR = obj.percent_r; }
                                        }

                                    } // end objSpc1
                                }
                            }
                            // ------ Find Description ------
                            //var SelectedOrgDesc = new List<string>();
                            //foreach (var SelectedOrgCode in multipleSelectedOrg)
                            //{
                            //    var desc = OrganismGroupMaster.Find(t => t.organisms == SelectedOrgCode);
                            //    if (desc != null) { SelectedOrgDesc.Add(desc.grp_organism_label); }
                            //    else { SelectedOrgDesc.Add(SelectedOrgCode); }
                            //}

                            var SelectdAntiDesc = new List<string>();
                            foreach (var SelectedAntiCode in multipleSelectedAnti)
                            {
                                var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                                if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                                else { SelectdAntiDesc.Add(SelectedAntiCode); }
                            }

                            var title = string.Format("{0} to {1} by Specimen", multipleSelectedOrg.FirstOrDefault(), string.Join(",", SelectdAntiDesc));
                            TitleChart = TitleChart + title;
                        } // end sub graph : specimen

                        if (selectedSubGraph == eSubGraph.Ward)
                        {

                            if (multipleSelectedWardType.Count() == 0)
                            {
                                await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 Ward");
                                goto EndPoint;
                            }

                            dictSeries.Clear();
                            dictSubMain.Clear();
                            dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                            dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
                            List<SP_AntimicrobialResistanceDTO> objWard = new List<SP_AntimicrobialResistanceDTO>();

                            if (!blnUpdate)
                            {
                                AMRData = await ReportService.GetAMRWardTypeModelAsync(searchAMR);
                                LoadAMRData = selectedSubGraph;
                                blnUpdate = true;
                            }
                            objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                && (multipleSelectedOrg.Contains(w.org_name))
                                                && (multipleSelectedAnti.Contains(w.anti_code))
                                                ).OrderBy(o => o.anti_code).ToList();

                            foreach (var drug in multipleSelectedAnti)
                            {
                                var drugName = AntibioticMaster.Find(f => f.ant_code == drug).ant_name;
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                if (!dictSubMain.ContainsKey(drugName))
                                {
                                    dictSubMain.Add(drugName, dictSeries);
                                }

                                foreach (var wardCode in multipleSelectedWardType)
                                {
                                    objWard = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()
                                                                        && w.ward_type == wardCode
                                                                        ).ToList();

                                    chartName1 = drug;
                                    EnumList = new List<DataReport>();
                                    for (var i = iYearFrom; i <= iYearTo; i++)
                                    {
                                        var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                        EnumList.Add(newdata);
                                    }

                                    dictSeries.Add(wardCode, EnumList);

                                    foreach (var obj in objWard)
                                    {
                                        var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                        if (obe != null)
                                        {
                                            if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                            else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                            else { obe.SIR = obj.percent_r; }
                                        }

                                    } // end objSpc1
                                }
                            }
                            // ------ Find Description ------
                            //var SelectedOrgDesc = new List<string>();
                            //foreach (var SelectedOrgCode in multipleSelectedOrg)
                            //{
                            //    var desc = OrganismGroupMaster.Find(t => t.organisms == SelectedOrgCode);
                            //    if (desc != null) { SelectedOrgDesc.Add(desc.grp_organism_label); }
                            //    else { SelectedOrgDesc.Add(SelectedOrgCode); }
                            //}

                            var SelectdAntiDesc = new List<string>();
                            foreach (var SelectedAntiCode in multipleSelectedAnti)
                            {
                                var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                                if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                                else { SelectdAntiDesc.Add(SelectedAntiCode); }
                            }

                            var title = string.Format("{0} to {1} by Ward Type", multipleSelectedOrg.FirstOrDefault(), string.Join(",", SelectdAntiDesc));
                            TitleChart = TitleChart + title;
                        } // end sub graph : Ward Type
                    }
                }

                // หลาย เชื้อ : หลาย ยา >> show series เชื้อ
                else if (multipleSelectedOrg.Count() > 1 && multipleSelectedAnti.Count() > 1)
                {

                    List<SP_AntimicrobialResistanceDTO> objAMRSearchResult;

                    dictSeries.Clear();
                    dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                    List<DataReport> EnumList = new List<DataReport>();
                    List<SP_AntimicrobialResistanceDTO> objOrg = new List<SP_AntimicrobialResistanceDTO>();
                    List<SP_AntimicrobialResistanceDTO> objSpc = new List<SP_AntimicrobialResistanceDTO>();
                    List<SP_AntimicrobialResistanceDTO> objWard = new List<SP_AntimicrobialResistanceDTO>();
                    // จำนวนกราฟ = จำนวนยา
                    if (selectedSubGraph == eSubGraph.None)
                    {

                        if (!blnUpdate)
                        {
                            AMRData = await ReportService.GetAMROverallModelAsync(searchAMR);
                            LoadAMRData = selectedSubGraph;
                            blnUpdate = true;
                        }
                        //searchAMR.org_codes = string.Join(",", multipleSelectedOrg);
                        //searchAMR.anti_codes = string.Join(",", multipleSelectedAnti);
                        objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                               && (multipleSelectedOrg.Contains(w.org_name))
                                               && (multipleSelectedAnti.Contains(w.anti_code))
                                               ).OrderBy(o => o.org_code).ToList();

                        foreach (var drug in multipleSelectedAnti)
                        {
                            var drugName = AntibioticMaster.Find(f => f.ant_code.ToUpper() == drug.ToUpper()).ant_name;

                            objOrg = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()).ToList();
                            dictSeries = new Dictionary<string, IEnumerable<DataReport>>();

                            if (!dictSubMain.ContainsKey(drugName)) { dictSubMain.Add(drugName, dictSeries); }

                            foreach (var orgn in multipleSelectedOrg)
                            {
                                EnumList = new List<DataReport>();
                                for (var i = iYearFrom; i <= iYearTo; i++)
                                {
                                    var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                    EnumList.Add(newdata);
                                }

                                var objOO = objOrg.Where(w => w.org_name == orgn).ToList();

                                foreach (var obj in objOO)
                                {
                                    if (!dictSeries.ContainsKey(obj.org_name)) { dictSeries.Add(obj.org_name, EnumList); };

                                    var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                    if (obe != null)
                                    {
                                        if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s;}
                                        else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i;}
                                        else { obe.SIR = obj.percent_r; }
                                    }
                                }
                            }
                        }
                    }

                    // จำนวนกราฟ = จำนวนยา x จำนวนเชื้อ
                    if (selectedSubGraph == eSubGraph.Specimen)
                    {
                        if (multipleSelectedSpecimen.Count() == 0)
                        {
                            await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 specimen");
                            goto EndPoint;
                        }

                        if (!blnUpdate)
                        {
                            AMRData = await ReportService.GetAMRSpecimenModelAsync(searchAMR);
                            LoadAMRData = selectedSubGraph;
                            blnUpdate = true;
                        }
                        objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                               && (multipleSelectedOrg.Contains(w.org_name))
                                               && (multipleSelectedAnti.Contains(w.anti_code))
                                               ).OrderBy(o => o.org_code).ToList();

                        foreach (var drug in multipleSelectedAnti)
                        {
                            objOrg = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()).ToList();
                            dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();

                            var drugName = AntibioticMaster.Find(f => f.ant_code == drug).ant_name;
                            if (!dictDrugMain.ContainsKey(drugName)) { dictDrugMain.Add(drugName, dictSubMain); }

                            foreach (var orgn in multipleSelectedOrg)
                            {
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                var orgName = orgn;//OrganismGroupMaster.Find(f => f.organisms == orgn).grp_organism_label;
                                if (!dictSubMain.ContainsKey(orgName)) { dictSubMain.Add(orgName, dictSeries); }

                                foreach (var spcCode in multipleSelectedSpecimen)
                                {
                                    objSpc = objOrg.Where(w => w.spc_code == spcCode && w.org_name == orgn
                                                           ).ToList();

                                    EnumList = new List<DataReport>();
                                    for (var i = iYearFrom; i <= iYearTo; i++)
                                    {
                                        var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                        EnumList.Add(newdata);
                                    }
                                    var spcName = SpecimenMaster.Find(t => t.spc_code == spcCode).spc_name;
                                    dictSeries.Add(spcName, EnumList);

                                    foreach (var obj in objSpc)
                                    {
                                        if (!dictSeries.ContainsKey(spcName))
                                        {
                                            var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                            if (obe != null)
                                            {
                                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                else { obe.SIR = obj.percent_r; }
                                            }
                                        }

                                        else
                                        {
                                            var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                            if (obe != null)
                                            {
                                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                else { obe.SIR = obj.percent_r; }
                                            }
                                        }

                                    }

                                }
                            }
                        }
                    }
                    // จำนวนกราฟ = จำนวนยา x จำนวนเชื้อ
                    if (selectedSubGraph == eSubGraph.Ward)
                    {
                        if (multipleSelectedWardType.Count() == 0)
                        {
                            await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 ward");
                            goto EndPoint;
                        }

                        if (!blnUpdate)
                        {
                            AMRData = await ReportService.GetAMRWardTypeModelAsync(searchAMR);
                            LoadAMRData = selectedSubGraph;
                            blnUpdate = true;

                        }
                        objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                               && (multipleSelectedOrg.Contains(w.org_name))
                                               && (multipleSelectedAnti.Contains(w.anti_code))
                                               ).OrderBy(o => o.org_code).ToList();

                        foreach (var drug in multipleSelectedAnti)
                        {
                            objOrg = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()).ToList();
                            dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();

                            var drugName = AntibioticMaster.Find(f => f.ant_code == drug).ant_name;
                            if (!dictDrugMain.ContainsKey(drugName)) { dictDrugMain.Add(drugName, dictSubMain);}

                            foreach (var orgn in multipleSelectedOrg)
                            {
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                var orgName = orgn;//OrganismGroupMaster.Find(f => f.organisms == orgn).grp_organism_label;
                                if (!dictSubMain.ContainsKey(orgName)) { dictSubMain.Add(orgName, dictSeries); }

                                foreach (var wardCode in multipleSelectedWardType)
                                {
                                    objWard = objOrg.Where(w => w.ward_type == wardCode && w.org_name == orgn
                                                           ).ToList();

                                    EnumList = new List<DataReport>();
                                    for (var i = iYearFrom; i <= iYearTo; i++)
                                    {
                                        var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                        EnumList.Add(newdata);
                                    }

                                    dictSeries.Add(wardCode, EnumList);

                                    foreach (var obj in objWard)
                                    {
                                        if (!dictSeries.ContainsKey(wardCode))
                                        {
                                            var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                            if (obe != null)
                                            {
                                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                else { obe.SIR = obj.percent_r; }
                                            }
                                        }

                                        else
                                        {
                                            var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                            if (obe != null)
                                            {
                                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                else { obe.SIR = obj.percent_r;}
                                            }
                                        }

                                    }

                                }
                            }
                        }
                    }
                    // ------ Find Description ------
                    //var SelectedOrgDesc = new List<string>();
                    //foreach (var SelectedOrgCode in multipleSelectedOrg)
                    //{
                    //    var desc = OrganismGroupMaster.Find(t => t.organisms == SelectedOrgCode);
                    //    if (desc != null) { SelectedOrgDesc.Add(desc.grp_organism_label); }
                    //    else { SelectedOrgDesc.Add(SelectedOrgCode); }
                    //}

                    var SelectdAntiDesc = new List<string>();
                    foreach (var SelectedAntiCode in multipleSelectedAnti)
                    {
                        var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                        if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                        else { SelectdAntiDesc.Add(SelectedAntiCode); }
                    }

                    var title = string.Format("{0} to {1}", string.Join(",", multipleSelectedOrg), string.Join(",", SelectdAntiDesc));
                    TitleChart = TitleChart + title;
                }

                EndPoint:
                blnLoadData = true;
                blnLoadComplete = true;
            }
        }

 
    } // end GraphResult

    string FormatValue(object value)
    {
        return String.Format("{0:0.00}%", (double)value);
    }

    private async Task ChangeSubGraph()
    {
        if (selectedSubGraph == eSubGraph.Specimen)
        {
            multipleSelectedWardType = Enumerable.Empty<string>();
        }
        else if (selectedSubGraph == eSubGraph.Ward)
        {
            multipleSelectedSpecimen = Enumerable.Empty<string>();
        }
        else if (selectedSubGraph == eSubGraph.None || selectedSubGraph == eSubGraph.NA)
        {
            multipleSelectedSpecimen = Enumerable.Empty<string>();
            multipleSelectedWardType = Enumerable.Empty<string>();
        }
        blnUpdate = false;
        StateHasChanged();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ColumnConfigService columnConfigService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ReportService antihosp { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private MasterTemplateService masterTemplateService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFileSave OIFileSave { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SpecimenService specimenService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AntibioticService antibioticService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private OrganismService organismService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ConfigDataService configDataService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AMPService ReportService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
namespace __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraph
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateRadzenRadioButtonListItem_0<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_1<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_2<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_3<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_4<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenListBox_5<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::Radzen.FilterCaseSensitivity __arg1, int __seq2, global::System.Boolean __arg2, int __seq3, global::System.Collections.IEnumerable __arg3, int __seq4, global::System.String __arg4, int __seq5, global::System.Object __arg5, int __seq6, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg6, int __seq7, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg7)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenListBox<TValue>>(seq);
        __builder.AddAttribute(__seq0, "AllowFiltering", __arg0);
        __builder.AddAttribute(__seq1, "FilterCaseSensitivity", __arg1);
        __builder.AddAttribute(__seq2, "Multiple", __arg2);
        __builder.AddAttribute(__seq3, "Data", __arg3);
        __builder.AddAttribute(__seq4, "Style", __arg4);
        __builder.AddAttribute(__seq5, "Value", __arg5);
        __builder.AddAttribute(__seq6, "ValueChanged", __arg6);
        __builder.AddAttribute(__seq7, "ValueExpression", __arg7);
        __builder.CloseComponent();
        }
        public static void CreateRadzenListBox_6<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::Radzen.FilterCaseSensitivity __arg1, int __seq2, global::System.Boolean __arg2, int __seq3, global::System.Collections.IEnumerable __arg3, int __seq4, global::System.String __arg4, int __seq5, global::System.String __arg5, int __seq6, global::System.String __arg6, int __seq7, global::System.Object __arg7, int __seq8, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg8, int __seq9, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg9)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenListBox<TValue>>(seq);
        __builder.AddAttribute(__seq0, "AllowFiltering", __arg0);
        __builder.AddAttribute(__seq1, "FilterCaseSensitivity", __arg1);
        __builder.AddAttribute(__seq2, "Multiple", __arg2);
        __builder.AddAttribute(__seq3, "Data", __arg3);
        __builder.AddAttribute(__seq4, "TextProperty", __arg4);
        __builder.AddAttribute(__seq5, "ValueProperty", __arg5);
        __builder.AddAttribute(__seq6, "Style", __arg6);
        __builder.AddAttribute(__seq7, "Value", __arg7);
        __builder.AddAttribute(__seq8, "ValueChanged", __arg8);
        __builder.AddAttribute(__seq9, "ValueExpression", __arg9);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_7<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_8<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_9<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenListBox_10<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::System.Boolean __arg1, int __seq2, global::System.Collections.IEnumerable __arg2, int __seq3, global::System.String __arg3, int __seq4, global::System.String __arg4, int __seq5, global::System.String __arg5, int __seq6, global::System.Object __arg6, int __seq7, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg7, int __seq8, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg8)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenListBox<TValue>>(seq);
        __builder.AddAttribute(__seq0, "AllowFiltering", __arg0);
        __builder.AddAttribute(__seq1, "Multiple", __arg1);
        __builder.AddAttribute(__seq2, "Data", __arg2);
        __builder.AddAttribute(__seq3, "TextProperty", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.AddAttribute(__seq5, "Style", __arg5);
        __builder.AddAttribute(__seq6, "Value", __arg6);
        __builder.AddAttribute(__seq7, "ValueChanged", __arg7);
        __builder.AddAttribute(__seq8, "ValueExpression", __arg8);
        __builder.CloseComponent();
        }
        public static void CreateRadzenListBox_11<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::System.Boolean __arg1, int __seq2, global::System.Collections.IEnumerable __arg2, int __seq3, global::System.String __arg3, int __seq4, global::System.Object __arg4, int __seq5, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg5, int __seq6, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg6)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenListBox<TValue>>(seq);
        __builder.AddAttribute(__seq0, "AllowFiltering", __arg0);
        __builder.AddAttribute(__seq1, "Multiple", __arg1);
        __builder.AddAttribute(__seq2, "Data", __arg2);
        __builder.AddAttribute(__seq3, "Style", __arg3);
        __builder.AddAttribute(__seq4, "Value", __arg4);
        __builder.AddAttribute(__seq5, "ValueChanged", __arg5);
        __builder.AddAttribute(__seq6, "ValueExpression", __arg6);
        __builder.CloseComponent();
        }
        public static void CreateRadzenLineSeries_12<TItem>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<TItem> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::Radzen.Blazor.LineType __arg3, int __seq4, global::System.String __arg4, int __seq5, global::Microsoft.AspNetCore.Components.RenderFragment __arg5)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenLineSeries<TItem>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CategoryProperty", __arg1);
        __builder.AddAttribute(__seq2, "Title", __arg2);
        __builder.AddAttribute(__seq3, "LineType", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.AddAttribute(__seq5, "ChildContent", __arg5);
        __builder.CloseComponent();
        }
        public static void CreateRadzenLineSeries_13<TItem>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<TItem> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::Radzen.Blazor.LineType __arg3, int __seq4, global::System.String __arg4, int __seq5, global::Microsoft.AspNetCore.Components.RenderFragment __arg5)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenLineSeries<TItem>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CategoryProperty", __arg1);
        __builder.AddAttribute(__seq2, "Title", __arg2);
        __builder.AddAttribute(__seq3, "LineType", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.AddAttribute(__seq5, "ChildContent", __arg5);
        __builder.CloseComponent();
        }
        public static void CreateRadzenColumnSeries_14<TItem>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<TItem> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::Radzen.Blazor.LineType __arg3, int __seq4, global::System.String __arg4)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenColumnSeries<TItem>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CategoryProperty", __arg1);
        __builder.AddAttribute(__seq2, "Title", __arg2);
        __builder.AddAttribute(__seq3, "LineType", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.CloseComponent();
        }
        public static void CreateRadzenColumnSeries_15<TItem>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<TItem> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::Radzen.Blazor.LineType __arg3, int __seq4, global::System.String __arg4)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenColumnSeries<TItem>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CategoryProperty", __arg1);
        __builder.AddAttribute(__seq2, "Title", __arg2);
        __builder.AddAttribute(__seq3, "LineType", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
