#pragma checksum "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5f1960e5111b8ca88406ed2bfb988b34ac62881f"
// <auto-generated/>
#pragma warning disable 1591
namespace ALISS.Pages.P6_Report.Antibiotrend
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.HttpOverrides;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using Blazored.Menu;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using BlazorDownloadFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.Account;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.DropDownList.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.LoginManagement.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Master.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Process.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.AUTH.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.MasterManagement.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.UserManagement.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.HISUpload.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 35 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.ANTIBIOGRAM.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 37 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.GLASS.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 39 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D0_Master;

#line default
#line hidden
#nullable disable
#nullable restore
#line 41 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D3_Process;

#line default
#line hidden
#nullable disable
#nullable restore
#line 42 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D4_UserManagement.AUTH;

#line default
#line hidden
#nullable disable
#nullable restore
#line 43 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D4_UserManagement.MasterManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 44 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D4_UserManagement.UserManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 46 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D5_HISData;

#line default
#line hidden
#nullable disable
#nullable restore
#line 47 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D6_Report.Antibiogram;

#line default
#line hidden
#nullable disable
#nullable restore
#line 49 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D6_Report.Glass;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
using ALISS.Data.D6_Report.Antibiotrend;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
using ALISS.ANTIBIOTREND.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
using ALISS.EXPORT.Library.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
using System.Data.SqlClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
using System.Configuration;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Antibiotrend/AMRGraphByHosp")]
    public partial class AMRGraphByHosp : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<div style=\"width: 100%;\"><div class=\"divHead\">\r\n        แนวโน้ม AMR ระดับโรงพยาบาล\r\n    </div></div>");
#nullable restore
#line 32 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
 if (!blnLoadComplete)
{

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<ALISS.Shared.Loading>(1);
            __builder.AddAttribute(2, "ShowModel", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 34 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                        true

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
#nullable restore
#line 35 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"

}
else
{

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(3, "<br>\r\n");
            __builder.OpenComponent<Radzen.Blazor.RadzenFieldset>(4);
            __builder.AddAttribute(5, "Text", " Select Hoapital ");
            __builder.AddAttribute(6, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenElement(7, "div");
                __builder2.AddAttribute(8, "class", "row justify-content-between");
                __builder2.OpenElement(9, "div");
                __builder2.AddAttribute(10, "class", "col-12 col-xl-4");
                __builder2.OpenElement(11, "div");
                __builder2.AddAttribute(12, "class", "row justify-content-start divGroup");
                __builder2.OpenElement(13, "div");
                __builder2.AddAttribute(14, "class", 
#nullable restore
#line 44 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             classLabel

#line default
#line hidden
#nullable disable
                );
                __builder2.OpenComponent<ALISS.Shared.LabelBox>(15);
                __builder2.AddAttribute(16, "inputLabel", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 45 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                           configData.Get_Label("rpt_graph_hospcode")

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(17, "\r\n                ");
                __builder2.OpenElement(18, "div");
                __builder2.AddAttribute(19, "class", 
#nullable restore
#line 47 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             classInput

#line default
#line hidden
#nullable disable
                );
                __builder2.OpenComponent<Radzen.Blazor.RadzenDropDown<string>>(20);
                __builder2.AddAttribute(21, "FilterCaseSensitivity", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Radzen.FilterCaseSensitivity>(
#nullable restore
#line 48 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                            FilterCaseSensitivity.CaseInsensitive

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(22, "AllowClear", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 49 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                true

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(23, "AllowFiltering", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 49 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                      true

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(24, "Placeholder", "Select...");
                __builder2.AddAttribute(25, "Data", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Collections.IEnumerable>(
#nullable restore
#line 50 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                          lab_ddl_List.Select(x => new { x.arh_code, x.arh_name, x.prv_code, x.prv_name, x.hos_code, x.hos_name }).Where(x => (searchAMR.arh_code == null || x.arh_code == searchAMR.arh_code) && (searchAMR.prv_code == null || x.prv_code == searchAMR.prv_code))

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(26, "ValueProperty", "hos_code");
                __builder2.AddAttribute(27, "TextProperty", "hos_name");
                __builder2.AddAttribute(28, "Change", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.Object>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.Object>(this, 
#nullable restore
#line 51 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                               args => DDL_Change("Hos", args)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(29, "Disabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 52 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                              (!string.IsNullOrEmpty(mainLayout.loginUser.hos_code))

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(30, "Style", "width:100%");
                __builder2.AddAttribute(31, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 48 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                 searchAMR.hos_code

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(32, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<string>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<string>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => searchAMR.hos_code = __value, searchAMR.hos_code))));
                __builder2.AddAttribute(33, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<string>>>(() => searchAMR.hos_code));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(34, "\r\n\r\n        ");
                __builder2.OpenElement(35, "div");
                __builder2.AddAttribute(36, "class", "col-12 col-xl-4");
                __builder2.OpenElement(37, "div");
                __builder2.AddAttribute(38, "class", "row justify-content-start divGroup");
                __builder2.OpenElement(39, "div");
                __builder2.AddAttribute(40, "class", 
#nullable restore
#line 59 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             classLabel

#line default
#line hidden
#nullable disable
                );
                __builder2.OpenComponent<ALISS.Shared.LabelBox>(41);
                __builder2.AddAttribute(42, "inputLabel", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 60 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                           configData.Get_Label("rpt_graph_prevcode")

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(43, "\r\n                ");
                __builder2.OpenElement(44, "div");
                __builder2.AddAttribute(45, "class", 
#nullable restore
#line 62 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             classInput

#line default
#line hidden
#nullable disable
                );
                __builder2.OpenComponent<Radzen.Blazor.RadzenDropDown<string>>(46);
                __builder2.AddAttribute(47, "FilterCaseSensitivity", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Radzen.FilterCaseSensitivity>(
#nullable restore
#line 63 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                            FilterCaseSensitivity.CaseInsensitive

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(48, "AllowClear", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 64 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                true

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(49, "AllowFiltering", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 64 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                      true

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(50, "Placeholder", "Select...");
                __builder2.AddAttribute(51, "Data", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Collections.IEnumerable>(
#nullable restore
#line 65 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                          lab_ddl_List.Select(x => new { x.arh_code, x.arh_name, x.prv_code, x.prv_name }).Where(x => (searchAMR.arh_code == null || x.arh_code == searchAMR.arh_code)).Distinct()

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(52, "ValueProperty", "prv_code");
                __builder2.AddAttribute(53, "TextProperty", "prv_name");
                __builder2.AddAttribute(54, "Change", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.Object>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.Object>(this, 
#nullable restore
#line 65 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                                                                                                                                                               args => DDL_Change("Prv", args)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(55, "Disabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 66 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                              (!string.IsNullOrEmpty(mainLayout.loginUser.prv_code))

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(56, "Style", "width:100%");
                __builder2.AddAttribute(57, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 63 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                 searchAMR.prv_code

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(58, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<string>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<string>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => searchAMR.prv_code = __value, searchAMR.prv_code))));
                __builder2.AddAttribute(59, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<string>>>(() => searchAMR.prv_code));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(60, "\r\n\r\n        ");
                __builder2.OpenElement(61, "div");
                __builder2.AddAttribute(62, "class", "col-12 col-xl-4");
                __builder2.OpenElement(63, "div");
                __builder2.AddAttribute(64, "class", "row justify-content-start divGroup");
                __builder2.OpenElement(65, "div");
                __builder2.AddAttribute(66, "class", 
#nullable restore
#line 73 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             classLabel

#line default
#line hidden
#nullable disable
                );
                __builder2.OpenComponent<ALISS.Shared.LabelBox>(67);
                __builder2.AddAttribute(68, "inputLabel", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 74 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                           configData.Get_Label("rpt_graph_arhcode")

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(69, "\r\n                ");
                __builder2.OpenElement(70, "div");
                __builder2.AddAttribute(71, "class", 
#nullable restore
#line 76 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             classInput

#line default
#line hidden
#nullable disable
                );
                __builder2.OpenComponent<Radzen.Blazor.RadzenDropDown<string>>(72);
                __builder2.AddAttribute(73, "FilterCaseSensitivity", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Radzen.FilterCaseSensitivity>(
#nullable restore
#line 77 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                            FilterCaseSensitivity.CaseInsensitive

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(74, "AllowClear", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 78 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                true

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(75, "AllowFiltering", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 78 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                      true

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(76, "Placeholder", "Select...");
                __builder2.AddAttribute(77, "Data", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Collections.IEnumerable>(
#nullable restore
#line 79 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                          lab_ddl_List.Select(x => new { x.arh_code, x.arh_name }).Distinct().OrderBy(o=>o.arh_code)

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(78, "ValueProperty", "arh_code");
                __builder2.AddAttribute(79, "TextProperty", "arh_name");
                __builder2.AddAttribute(80, "Change", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.Object>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.Object>(this, 
#nullable restore
#line 79 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                                                                                 args => DDL_Change("Arh", args)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(81, "Disabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 80 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                              (!string.IsNullOrEmpty(mainLayout.loginUser.arh_code))

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(82, "Style", "width:100%");
                __builder2.AddAttribute(83, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 77 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                 searchAMR.arh_code

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(84, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<string>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<string>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => searchAMR.arh_code = __value, searchAMR.arh_code))));
                __builder2.AddAttribute(85, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<string>>>(() => searchAMR.arh_code));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
            }
            ));
            __builder.CloseComponent();
            __builder.OpenComponent<Radzen.Blazor.RadzenFieldset>(86);
            __builder.AddAttribute(87, "Text", "Filter");
            __builder.AddAttribute(88, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenElement(89, "div");
                __builder2.AddAttribute(90, "class", "row justify-content-between");
                __builder2.OpenElement(91, "div");
                __builder2.AddAttribute(92, "class", "col-12 col-xl-4");
                __builder2.OpenElement(93, "h5");
                __builder2.AddContent(94, 
#nullable restore
#line 91 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 configData.Get_Label("rpt_graph_xaxis")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(95, "\r\n            ");
                __builder2.AddContent(96, 
#nullable restore
#line 92 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
             configData.Get_Label("rpt_graph_yearfrom")

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(97, "\r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenNumeric<int>>(98);
                __builder2.AddAttribute(99, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Decimal?>(
#nullable restore
#line 93 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                             9999

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(100, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Decimal?>(
#nullable restore
#line 93 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                        1900

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(101, "style", "width: 30%;");
                __builder2.AddAttribute(102, "Name", "from_year");
                __builder2.AddAttribute(103, "Change", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<int>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<int>(this, 
#nullable restore
#line 93 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                    (args) => ChangeSubGraph()

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(104, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<int>(
#nullable restore
#line 93 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                iYearFrom

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(105, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<int>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<int>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => iYearFrom = __value, iYearFrom))));
                __builder2.AddAttribute(106, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<int>>>(() => iYearFrom));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(107, "\r\n\r\n            ");
                __builder2.AddContent(108, 
#nullable restore
#line 95 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
             configData.Get_Label("rpt_graph_yearto")

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(109, "\r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenNumeric<int>>(110);
                __builder2.AddAttribute(111, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Decimal?>(
#nullable restore
#line 96 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                             9999

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(112, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Decimal?>(
#nullable restore
#line 96 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                        1900

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(113, "style", "width: 30%;");
                __builder2.AddAttribute(114, "Name", "to_year");
                __builder2.AddAttribute(115, "Change", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<int>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<int>(this, 
#nullable restore
#line 96 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                (args) => ChangeSubGraph()

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(116, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<int>(
#nullable restore
#line 96 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                              iYearTo

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(117, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<int>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<int>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => iYearTo = __value, iYearTo))));
                __builder2.AddAttribute(118, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<int>>>(() => iYearTo));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(119, "\r\n            <br><br>");
                __builder2.CloseElement();
                __builder2.AddMarkupContent(120, "\r\n\r\n        ");
                __builder2.OpenElement(121, "div");
                __builder2.AddAttribute(122, "class", "col-12 col-xl-4");
                __builder2.OpenElement(123, "h5");
                __builder2.AddContent(124, 
#nullable restore
#line 102 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 configData.Get_Label("rpt_graph_yaxis")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(125, "\r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenRadioButtonList<eSIRValue>>(126);
                __builder2.AddAttribute(127, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<eSIRValue>(
#nullable restore
#line 103 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                selectedSIRValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(128, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<eSIRValue>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<eSIRValue>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => selectedSIRValue = __value, selectedSIRValue))));
                __builder2.AddAttribute(129, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<eSIRValue>>>(() => selectedSIRValue));
                __builder2.AddAttribute(130, "Items", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenRadioButtonListItem_0(__builder3, 131, 132, "%S", 133, 
#nullable restore
#line 105 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                eSIRValue.S

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(134, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenRadioButtonListItem_1(__builder3, 135, 136, "%I", 137, 
#nullable restore
#line 106 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                eSIRValue.I

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(138, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenRadioButtonListItem_2(__builder3, 139, 140, "%R", 141, 
#nullable restore
#line 107 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                eSIRValue.R

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(142, "\r\n            <br><br>");
                __builder2.CloseElement();
                __builder2.AddMarkupContent(143, "\r\n        ");
                __builder2.OpenElement(144, "div");
                __builder2.AddAttribute(145, "class", "col-12 col-xl-4");
                __builder2.OpenElement(146, "h5");
                __builder2.AddContent(147, 
#nullable restore
#line 114 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 configData.Get_Label("rpt_graph_format")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(148, "           \r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenRadioButtonList<eGraphFormat>>(149);
                __builder2.AddAttribute(150, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<eGraphFormat>(
#nullable restore
#line 115 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                selectedGraphFormat

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(151, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<eGraphFormat>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<eGraphFormat>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => selectedGraphFormat = __value, selectedGraphFormat))));
                __builder2.AddAttribute(152, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<eGraphFormat>>>(() => selectedGraphFormat));
                __builder2.AddAttribute(153, "Items", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenRadioButtonListItem_3(__builder3, 154, 155, "Line", 156, 
#nullable restore
#line 117 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                  eGraphFormat.Line

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(157, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenRadioButtonListItem_4(__builder3, 158, 159, "Bar", 160, 
#nullable restore
#line 118 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                 eGraphFormat.Bar

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(161, "\r\n\r\n    ");
                __builder2.OpenElement(162, "div");
                __builder2.AddAttribute(163, "class", "row justify-content-between");
                __builder2.OpenElement(164, "div");
                __builder2.AddAttribute(165, "class", "col-md-4");
                __builder2.OpenElement(166, "h5");
                __builder2.AddContent(167, 
#nullable restore
#line 126 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 configData.Get_Label("rpt_graph_organism")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(168, "\r\n            ");
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenListBox_5(__builder2, 169, 170, 
#nullable restore
#line 127 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                           true

#line default
#line hidden
#nullable disable
                , 171, 
#nullable restore
#line 127 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                        FilterCaseSensitivity.CaseInsensitive

#line default
#line hidden
#nullable disable
                , 172, 
#nullable restore
#line 127 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                                           true

#line default
#line hidden
#nullable disable
                , 173, 
#nullable restore
#line 127 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                                                        OrgLabelName

#line default
#line hidden
#nullable disable
                , 174, "margin-bottom: 20px; height:350px; width:350px", 175, 
#nullable restore
#line 127 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                            multipleSelectedOrg

#line default
#line hidden
#nullable disable
                , 176, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => multipleSelectedOrg = __value, multipleSelectedOrg)), 177, () => multipleSelectedOrg);
                __builder2.CloseElement();
                __builder2.AddMarkupContent(178, "\r\n        ");
                __builder2.OpenElement(179, "div");
                __builder2.AddAttribute(180, "class", "col-md-4");
                __builder2.OpenElement(181, "h5");
                __builder2.AddContent(182, 
#nullable restore
#line 134 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 configData.Get_Label("rpt_graph_antibiotic")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(183, "\r\n            ");
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenListBox_6(__builder2, 184, 185, 
#nullable restore
#line 135 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                           true

#line default
#line hidden
#nullable disable
                , 186, 
#nullable restore
#line 135 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                        FilterCaseSensitivity.CaseInsensitive

#line default
#line hidden
#nullable disable
                , 187, 
#nullable restore
#line 135 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                                            true

#line default
#line hidden
#nullable disable
                , 188, 
#nullable restore
#line 135 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                                                         AntibioticMaster

#line default
#line hidden
#nullable disable
                , 189, "ant_name", 190, "ant_code", 191, "margin-bottom: 20px; height:350px; width:350px", 192, 
#nullable restore
#line 135 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                            multipleSelectedAnti

#line default
#line hidden
#nullable disable
                , 193, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => multipleSelectedAnti = __value, multipleSelectedAnti)), 194, () => multipleSelectedAnti);
                __builder2.CloseElement();
                __builder2.AddMarkupContent(195, "\r\n        ");
                __builder2.OpenElement(196, "div");
                __builder2.AddAttribute(197, "class", "col-md-4");
                __builder2.OpenElement(198, "h5");
                __builder2.AddContent(199, 
#nullable restore
#line 142 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 configData.Get_Label("rpt_graph_subgraph")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(200, "\r\n            ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenRadioButtonList<eSubGraph>>(201);
                __builder2.AddAttribute(202, "Change", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<eSubGraph>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<eSubGraph>(this, 
#nullable restore
#line 143 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                              (args) => ChangeSubGraph()

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(203, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<eSubGraph>(
#nullable restore
#line 143 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                selectedSubGraph

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(204, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<eSubGraph>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<eSubGraph>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => selectedSubGraph = __value, selectedSubGraph))));
                __builder2.AddAttribute(205, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<eSubGraph>>>(() => selectedSubGraph));
                __builder2.AddAttribute(206, "Items", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenRadioButtonListItem_7(__builder3, 207, 208, "Specimen", 209, 
#nullable restore
#line 145 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                      eSubGraph.Specimen

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(210, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenRadioButtonListItem_8(__builder3, 211, 212, "Ward Type", 213, 
#nullable restore
#line 146 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                       eSubGraph.Ward

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(214, "\r\n                    ");
                    __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenRadioButtonListItem_9(__builder3, 215, 216, "None", 217, 
#nullable restore
#line 147 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                  eSubGraph.None

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(218, "\r\n\r\n            <div class=\"row\"></div>\r\n            ");
                __builder2.OpenElement(219, "div");
                __builder2.AddAttribute(220, "class", "row");
#nullable restore
#line 155 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 if (selectedSubGraph == eSubGraph.Specimen)
                {

#line default
#line hidden
#nullable disable
                __builder2.OpenElement(221, "div");
                __builder2.AddAttribute(222, "class", "col-md-6");
                __builder2.AddMarkupContent(223, "<br><br>\r\n                        ");
                __builder2.OpenElement(224, "h6");
                __builder2.AddContent(225, 
#nullable restore
#line 159 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             configData.Get_Label("rpt_graph_specimenlist")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(226, "\r\n                        ");
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenListBox_10(__builder2, 227, 228, 
#nullable restore
#line 160 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                       true

#line default
#line hidden
#nullable disable
                , 229, 
#nullable restore
#line 160 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                              true

#line default
#line hidden
#nullable disable
                , 230, 
#nullable restore
#line 160 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                           SpecimenMaster

#line default
#line hidden
#nullable disable
                , 231, "spc_name", 232, "spc_code", 233, "margin-bottom: 50px; height:200px; background-color : transparent", 234, 
#nullable restore
#line 160 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                          multipleSelectedSpecimen

#line default
#line hidden
#nullable disable
                , 235, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => multipleSelectedSpecimen = __value, multipleSelectedSpecimen)), 236, () => multipleSelectedSpecimen);
                __builder2.CloseElement();
#nullable restore
#line 163 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 165 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 if (selectedSubGraph == eSubGraph.Ward)
                {

#line default
#line hidden
#nullable disable
                __builder2.OpenElement(237, "div");
                __builder2.AddAttribute(238, "class", "col-md-6");
                __builder2.AddMarkupContent(239, "<br><br>\r\n                        ");
                __builder2.OpenElement(240, "h6");
                __builder2.AddContent(241, 
#nullable restore
#line 169 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             configData.Get_Label("rpt_graph_wardlist")

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(242, "\r\n                        ");
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenListBox_11(__builder2, 243, 244, 
#nullable restore
#line 170 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                       true

#line default
#line hidden
#nullable disable
                , 245, 
#nullable restore
#line 170 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                              true

#line default
#line hidden
#nullable disable
                , 246, 
#nullable restore
#line 170 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                           WardTypeMaster

#line default
#line hidden
#nullable disable
                , 247, "margin-bottom: 50px; height:200px; background-color : transparent", 248, 
#nullable restore
#line 170 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                          multipleSelectedWardType

#line default
#line hidden
#nullable disable
                , 249, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => multipleSelectedWardType = __value, multipleSelectedWardType)), 250, () => multipleSelectedWardType);
                __builder2.CloseElement();
#nullable restore
#line 173 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                }

#line default
#line hidden
#nullable disable
                __builder2.CloseElement();
                __builder2.AddMarkupContent(251, "\r\n\r\n            <br><br>");
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(252, "\r\n\r\n    ");
                __builder2.OpenElement(253, "div");
                __builder2.AddAttribute(254, "class", "row justify-content-between buttonArea");
                __builder2.OpenElement(255, "div");
                __builder2.AddAttribute(256, "class", "col-6");
                __builder2.OpenElement(257, "div");
                __builder2.AddAttribute(258, "class", "row justify-content-start divGroup buttonArea");
                __builder2.OpenElement(259, "div");
                __builder2.AddAttribute(260, "class", "col-auto");
                __builder2.OpenComponent<Radzen.Blazor.RadzenButton>(261);
                __builder2.AddAttribute(262, "class", "btnDownload");
                __builder2.AddAttribute(263, "Text", "Export");
                __builder2.AddAttribute(264, "Click", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 183 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                               ExportFile

#line default
#line hidden
#nullable disable
                )));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(265, "\r\n        ");
                __builder2.OpenElement(266, "div");
                __builder2.AddAttribute(267, "class", "col-6");
                __builder2.OpenElement(268, "div");
                __builder2.AddAttribute(269, "class", "row justify-content-end divGroup buttonArea");
                __builder2.OpenElement(270, "div");
                __builder2.AddAttribute(271, "class", "col-auto");
                __builder2.OpenComponent<Radzen.Blazor.RadzenButton>(272);
                __builder2.AddAttribute(273, "class", "btnSearch");
                __builder2.AddAttribute(274, "Text", "Graph Result");
                __builder2.AddAttribute(275, "Click", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 188 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                   GraphResult

#line default
#line hidden
#nullable disable
                )));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(276, "\r\n                ");
                __builder2.OpenElement(277, "div");
                __builder2.AddAttribute(278, "class", "col-auto");
                __builder2.OpenComponent<Radzen.Blazor.RadzenButton>(279);
                __builder2.AddAttribute(280, "class", "btnClear");
                __builder2.AddAttribute(281, "Text", "Clear");
                __builder2.AddAttribute(282, "Click", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 189 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                           ClearData

#line default
#line hidden
#nullable disable
                )));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
#nullable restore
#line 194 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
     if (!blnExportComplete)
    {

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<ALISS.Shared.Loading>(283);
                __builder2.AddAttribute(284, "ShowModel", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 196 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                            true

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
#nullable restore
#line 197 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
    }

#line default
#line hidden
#nullable disable
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 201 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
     if (blnLoadData == true)
    {

        

#line default
#line hidden
#nullable disable
#nullable restore
#line 204 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
         if (selectedGraphFormat == eGraphFormat.Line)
        {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(285, "h1");
            __builder.AddContent(286, 
#nullable restore
#line 206 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 TitleChart

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(287, "\r\n            ");
            __builder.OpenElement(288, "div");
            __builder.AddAttribute(289, "class", "row");
#nullable restore
#line 209 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 if (dictSubMain.Count > 0)
                {
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 211 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                     foreach (var ppMain in dictSubMain.Keys)
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(290, "div");
            __builder.AddAttribute(291, "class", "col-md-6 col-sm-12 p-4");
            __builder.OpenElement(292, "h1");
            __builder.AddContent(293, 
#nullable restore
#line 214 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                 ppMain

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
#nullable restore
#line 215 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             if (dictSubMain[ppMain].Values.All(a => a.All(f => f.SIR == 0)))
                            {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenTextBox>(294);
            __builder.AddAttribute(295, "Style", "vertical-align:middle; text-align:center");
            __builder.AddAttribute(296, "Value", "No Data");
            __builder.CloseComponent();
#nullable restore
#line 218 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                            }
                            else
                            {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenChart>(297);
            __builder.AddAttribute(298, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
#nullable restore
#line 222 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                     foreach (var series in dictSubMain[ppMain])
                                    {

#line default
#line hidden
#nullable disable
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenLineSeries_12(__builder2, 299, 300, 
#nullable restore
#line 224 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                 series.Value

#line default
#line hidden
#nullable disable
                , 301, "Year", 302, 
#nullable restore
#line 224 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                               series.Key

#line default
#line hidden
#nullable disable
                , 303, 
#nullable restore
#line 224 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                     Radzen.Blazor.LineType.Dashed

#line default
#line hidden
#nullable disable
                , 304, "SIR", 305, (__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenCategoryAxis>(306);
                    __builder3.AddAttribute(307, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 225 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                      1

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(308, "\r\n                                            ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenMarkers>(309);
                    __builder3.AddAttribute(310, "MarkerType", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Radzen.Blazor.MarkerType>(
#nullable restore
#line 226 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                       MarkerType.Square

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                );
#nullable restore
#line 228 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                    }

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(311);
                __builder2.AddAttribute(312, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 229 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                          0

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(313, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 229 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                  100

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(314, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 229 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                             20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(315, "\r\n                                    ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenCategoryAxis>(316);
                __builder2.AddAttribute(317, "Padding", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 230 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                 20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(318, "\r\n                                    ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(319);
                __builder2.AddAttribute(320, "Formatter", new System.Func<System.Object, System.String>(
#nullable restore
#line 231 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                 FormatValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(321, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenGridLines>(322);
                    __builder3.AddAttribute(323, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 232 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                  true

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(324, "\r\n                                        ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenAxisTitle>(325);
                    __builder3.AddAttribute(326, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 233 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                SIRText

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 236 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                            }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 239 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 239 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                     
                }
                else
                {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(327, "div");
            __builder.AddAttribute(328, "class", "col-md-6 col-sm-12 p-4");
#nullable restore
#line 244 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                         if (@dictSeries.Values.All(a => a.All(f => f.SIR == 0)))
                        {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenTextBox>(329);
            __builder.AddAttribute(330, "Style", "vertical-align:middle; text-align:center");
            __builder.AddAttribute(331, "Value", "No Data");
            __builder.CloseComponent();
#nullable restore
#line 247 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                        }
                        else
                        {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenChart>(332);
            __builder.AddAttribute(333, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
#nullable restore
#line 251 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                 foreach (var pp in dictSeries)
                                {

#line default
#line hidden
#nullable disable
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenLineSeries_13(__builder2, 334, 335, 
#nullable restore
#line 253 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                             pp.Value

#line default
#line hidden
#nullable disable
                , 336, "Year", 337, 
#nullable restore
#line 253 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                       pp.Key

#line default
#line hidden
#nullable disable
                , 338, 
#nullable restore
#line 253 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                         Radzen.Blazor.LineType.Dashed

#line default
#line hidden
#nullable disable
                , 339, "SIR", 340, (__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenCategoryAxis>(341);
                    __builder3.AddAttribute(342, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 254 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                  1

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(343, "\r\n                                        ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenMarkers>(344);
                    __builder3.AddAttribute(345, "MarkerType", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Radzen.Blazor.MarkerType>(
#nullable restore
#line 255 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                   MarkerType.Square

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                );
#nullable restore
#line 257 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                }

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(346);
                __builder2.AddAttribute(347, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 258 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                      0

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(348, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 258 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                              100

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(349, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 258 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                         20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(350, "\r\n                                ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenCategoryAxis>(351);
                __builder2.AddAttribute(352, "Padding", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 259 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                             20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(353, "\r\n                                ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(354);
                __builder2.AddAttribute(355, "Formatter", new System.Func<System.Object, System.String>(
#nullable restore
#line 260 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                             FormatValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(356, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenGridLines>(357);
                    __builder3.AddAttribute(358, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 261 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                              true

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(359, "\r\n                                    ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenAxisTitle>(360);
                    __builder3.AddAttribute(361, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 262 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                            SIRText

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 265 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                        }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 267 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 269 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 271 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
         if (selectedGraphFormat == eGraphFormat.Bar)
        {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(362, "h1");
            __builder.AddContent(363, 
#nullable restore
#line 273 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 TitleChart

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(364, "\r\n            ");
            __builder.OpenElement(365, "div");
            __builder.AddAttribute(366, "class", "row");
#nullable restore
#line 276 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                 if (dictSubMain.Count > 0)
                {
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 278 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                     foreach (var ppMain in dictSubMain.Keys)
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(367, "div");
            __builder.AddAttribute(368, "class", "col-md-6 col-sm-12 p-4");
            __builder.OpenElement(369, "h1");
            __builder.AddContent(370, 
#nullable restore
#line 281 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                 ppMain

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
#nullable restore
#line 282 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                             if (dictSubMain[ppMain].Values.All(a => a.All(f => f.SIR == 0)))
                            {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenTextBox>(371);
            __builder.AddAttribute(372, "Style", "vertical-align:middle; text-align:center");
            __builder.AddAttribute(373, "Value", "No Data");
            __builder.CloseComponent();
#nullable restore
#line 285 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                            }
                            else
                            {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenChart>(374);
            __builder.AddAttribute(375, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
#nullable restore
#line 289 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                     foreach (var series in dictSubMain[ppMain])
                                    {

#line default
#line hidden
#nullable disable
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenColumnSeries_14(__builder2, 376, 377, 
#nullable restore
#line 291 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                   series.Value

#line default
#line hidden
#nullable disable
                , 378, "Year", 379, 
#nullable restore
#line 291 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                series.Key

#line default
#line hidden
#nullable disable
                , 380, 
#nullable restore
#line 291 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                     Radzen.Blazor.LineType.Dashed

#line default
#line hidden
#nullable disable
                , 381, "SIR");
#nullable restore
#line 294 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                    }

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<Radzen.Blazor.RadzenColumnOptions>(382);
                __builder2.AddAttribute(383, "Radius", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 295 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                 5

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(384, "\r\n                                    ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(385);
                __builder2.AddAttribute(386, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 296 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                          0

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(387, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 296 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                  100

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(388, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 296 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                             20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(389, "\r\n                                    ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(390);
                __builder2.AddAttribute(391, "Formatter", new System.Func<System.Object, System.String>(
#nullable restore
#line 297 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                 FormatValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(392, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenGridLines>(393);
                    __builder3.AddAttribute(394, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 298 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                  true

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(395, "\r\n                                        ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenAxisTitle>(396);
                    __builder3.AddAttribute(397, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 299 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                SIRText

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 302 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                            }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 304 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 304 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                     
                }

                else
                {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(398, "div");
            __builder.AddAttribute(399, "class", "col-md-6 col-sm-12 p-4");
#nullable restore
#line 310 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                         if (@dictSeries.Values.All(a => a.All(f => f.SIR == 0)))
                        {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenTextBox>(400);
            __builder.AddAttribute(401, "Style", "vertical-align:middle; text-align:center");
            __builder.AddAttribute(402, "Value", "No Data");
            __builder.CloseComponent();
#nullable restore
#line 313 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                        }
                        else
                        {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Radzen.Blazor.RadzenChart>(403);
            __builder.AddAttribute(404, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
#nullable restore
#line 317 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                 foreach (var series in dictSeries)
                                {

#line default
#line hidden
#nullable disable
                __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp.TypeInference.CreateRadzenColumnSeries_15(__builder2, 405, 406, 
#nullable restore
#line 319 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                               series.Value

#line default
#line hidden
#nullable disable
                , 407, "Year", 408, 
#nullable restore
#line 319 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                            series.Key

#line default
#line hidden
#nullable disable
                , 409, 
#nullable restore
#line 319 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                                                                                 Radzen.Blazor.LineType.Dashed

#line default
#line hidden
#nullable disable
                , 410, "SIR");
#nullable restore
#line 322 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                }

#line default
#line hidden
#nullable disable
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(411);
                __builder2.AddAttribute(412, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 323 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                      0

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(413, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 323 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                              100

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(414, "Step", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 323 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                                         20

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(415, "\r\n                                ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenColumnOptions>(416);
                __builder2.AddAttribute(417, "Radius", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 324 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                             5

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(418, "\r\n                                ");
                __builder2.OpenComponent<Radzen.Blazor.RadzenValueAxis>(419);
                __builder2.AddAttribute(420, "Formatter", new System.Func<System.Object, System.String>(
#nullable restore
#line 325 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                             FormatValue

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(421, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.OpenComponent<Radzen.Blazor.RadzenGridLines>(422);
                    __builder3.AddAttribute(423, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 326 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                              true

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(424, "\r\n                                    ");
                    __builder3.OpenComponent<Radzen.Blazor.RadzenAxisTitle>(425);
                    __builder3.AddAttribute(426, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 327 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                                                            SIRText

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 330 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                        }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 332 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 335 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 335 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
         
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 336 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
     
    }

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 340 "D:\G-able\GitHub\ALISS_PROJECT\ALISS\Pages\P6_Report\Antibiotrend\AMRGraphByHosp.razor"
           

        [CascadingParameter] MainLayout mainLayout { get; set; }
        private const string MENU_CODE = "MNU_0709";
        private ConfigData configData = new ConfigData();
        private string classLabel = "col-md-4";
        private string classInput = "col-8";
        private List<ColumnConfigDTO> searchColumnConfigResultList;
        private List<HospitalLabDataDTO> lab_ddl_List;

        string _Message;
        private int iYearFrom = (DateTime.Today.Year - 5);
        private int iYearTo = DateTime.Today.Year;
        private eSIRValue selectedSIRValue = eSIRValue.S;
        private eSubGraph selectedSubGraph = eSubGraph.None;
        private eGraphFormat selectedGraphFormat = eGraphFormat.Line;
        private string SIRText;
        private Boolean blnLoadData = false;
        private Boolean blnLoadComplete = false;
        private Boolean blnExportComplete = true;
        private Boolean blnShowSubGraphList = false;

        private string TitleChart;
        private eSubGraph LoadAMRData = eSubGraph.NA;

        private List<SP_AntimicrobialResistanceDTO> AMRData;
        SP_AntimicrobialResistanceHospSearchDTO searchAMR = new SP_AntimicrobialResistanceHospSearchDTO();
        private AMRGraphSearchDTO modelExport = new AMRGraphSearchDTO();

        private string titleChart;
        private string chartName1;
        private string chartName2;
        IEnumerable<string> multipleSelectedOrg = new string[] { };
        IEnumerable<string> multipleSelectedAnti = new string[] { };
        IEnumerable<string> multipleSelectedSpecimen = new string[] { };
        IEnumerable<string> multipleSelectedWardType = new string[] { };
        private List<SpecimenDTO> SpecimenMaster = new List<SpecimenDTO>();
        //private List<OrganismDTO> OrganismMaster = new List<OrganismDTO>();
        private List<AntibioticNameDTO> AntibioticMaster = new List<AntibioticNameDTO>();

        private SpecimenDTO ActiveSpcimen = new SpecimenDTO();
        private OrganismDTO ActiveOrganism = new OrganismDTO();
        private AntibioticDTO ActiveAntibiotic = new AntibioticDTO();
        private MasterTemplateDTO ActiveMasterTemplate = new MasterTemplateDTO();

        List<string> WardTypeMaster = new List<string> { "opd", "ipd", "icu" };
        //List<string> SpecimenMasteruu = new List<string> { "bl", "ur", "st", "sp" };
        private List<OrganismGroupDTO> OrganismGroupMaster = new List<OrganismGroupDTO>();
        List<string> OrgLabelName = new List<string>();
        List<string> AntiLabelName = new List<string>();
        private bool blnUpdate = false;

        IEnumerable<DataReport> enumData = new DataReport[] { };

        private enum eGraphFormat
        {
            Line = 1,
            Bar = 2,
            Pie = 3
        }

        private enum eSubGraph
        {
            Specimen = 1,
            Ward = 2,
            None = 0,
            NA = -1

        }

        private enum eSIRValue
        {
            S = 1,
            I = 2,
            R = 3
        }

        class DataReport
        {
            public string Year { get; set; }
            public double SIR { get; set; }
        }

        private Dictionary<string, IEnumerable<DataReport>> dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
        private Dictionary<string, Dictionary<string, IEnumerable<DataReport>>> dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
        private Dictionary<string, Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>> dictDrugMain = new Dictionary<string, Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>>();

        class clsOrganism
        {
            public string org_code { get; set; }
            public string org_name { get; set; }
        }

        class clsAntibiotic
        {
            public string anti_code { get; set; }
            public string anti_name { get; set; }
        }

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                await mainLayout.GetLoginUser();

                //if (mainLayout.loginUser.CheckPagePermission(MENU_CODE) == false) navigationManager.NavigateTo("/NoPermissionPage");

                configData.ConfigDTOList = await configDataService.Get_TBConfig_DataList_Async(new TBConfigDTO() { tbc_mnu_code = MENU_CODE });

                var searchData = new HospitalLabDataDTO()
                {
                    arh_code = searchAMR.arh_code = mainLayout.loginUser.arh_code,
                    hos_code = searchAMR.hos_code = mainLayout.loginUser.hos_code,
                    prv_code = searchAMR.prv_code = mainLayout.loginUser.prv_code,
                };
                lab_ddl_List = await ddlDataService.GetAllLabListByModelAsync(searchData);

                ActiveMasterTemplate = await masterTemplateService.GetListByModelActiveAsync(new MasterTemplateSearchDTO());
                ActiveSpcimen.spc_mst_code = ActiveOrganism.org_mst_code = ActiveAntibiotic.ant_mst_code = ActiveMasterTemplate.mst_code;

                SpecimenMaster = await specimenService.GetListByModelActiveAsync(ActiveSpcimen);
                AntibioticMaster = await ReportService.GetAntibioticNameAsync();
                AntiLabelName = AntibioticMaster.Select(s => s.ant_name).Distinct().ToList();

                OrganismGroupMaster = await antihosp.GetOrganismGroupAsync();
                OrgLabelName = OrganismGroupMaster.Select(s => s.org_organism_label).Distinct().ToList();

                searchAMR.start_year = iYearFrom;
                searchAMR.end_year = iYearTo;

                blnLoadComplete = true;

            }
        }

        private async Task ClearGraph()
        {
            dictSeries.Clear();
            dictSubMain.Clear();
            dictDrugMain.Clear();

            blnLoadData = false;
            StateHasChanged();
        }

        private async Task ClearData()
        {
            iYearFrom = (DateTime.Today.Year - 5);
            iYearTo = DateTime.Today.Year;

            searchAMR.start_year = iYearFrom;
            searchAMR.end_year = iYearTo;

            multipleSelectedOrg = new string[] { };
            multipleSelectedAnti = new string[] { };

            selectedSubGraph = eSubGraph.None;
            selectedGraphFormat = eGraphFormat.Line;
            selectedSIRValue = eSIRValue.S;

            await ClearGraph();
        }

        async void ExportFile()
        {
            blnExportComplete = false;
            modelExport.start_year = searchAMR.start_year;
            modelExport.end_year = searchAMR.end_year;
            if (selectedSIRValue == eSIRValue.S)
            {
                modelExport.sir = "S";
            }
            else if (selectedSIRValue == eSIRValue.I)
            {
                modelExport.sir = "I";
            }
            else
            {
                modelExport.sir = "R";
            }
            modelExport.graph_format = (int)selectedGraphFormat;
            modelExport.sub_graph = (int)selectedSubGraph;
            modelExport.organism = multipleSelectedOrg;
            modelExport.antibiotic = multipleSelectedAnti;

            modelExport.hos_code = searchAMR.hos_code;
            var hos_select = lab_ddl_List.FirstOrDefault(x => x.hos_code == searchAMR.hos_code);
            modelExport.hos_name = hos_select.hos_name;
            modelExport.wardlist = multipleSelectedWardType;
            modelExport.specimenlist = multipleSelectedSpecimen;

            string OutputFileName = string.Format("{0}-{1}_{2}_{3}"
                                                , modelExport.start_year
                                                , modelExport.end_year
                                                , modelExport.hos_name
                                                , "AMRGraph.pdf");

            string statuscode = await ReportService.ExportGraphFileDataAsync(modelExport,"H",OutputFileName);
            if (statuscode == "OK")
            {

                string ServerFileName = "ANTIBIOTREND" + "/" + DateTime.Today.ToString("yyyyMMdd") + "/" + OutputFileName;
                string contentType = "application/pdf";

                await OIFileSave.DownloadFile(ServerFileName, OutputFileName, contentType);

            }
            else if (statuscode == "ERR_PATH")
            {
                await JSRuntime.InvokeAsync<object>("ShowAlert", "ไม่พบ Config PATH กรุณาติดต่อผู้ดูแลระบบ");
            }
            else
            {
                await JSRuntime.InvokeAsync<object>("ShowAlert", "File not Found");
            }
            blnExportComplete = true;
        }

        private async Task GraphResult()
        {

            if (string.IsNullOrEmpty(searchAMR.hos_code))
            {
                await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select โรงพยาบาล");
            }
            else if((multipleSelectedOrg.Count() == 0) || (multipleSelectedAnti.Count() == 0)){
                 await JSRuntime.InvokeAsync<object>("ShowAlert", "Please select Organism and Antibiotic");
            }
            else
            {
                if (iYearFrom != 0 && iYearTo != 0)
                {

                    blnLoadComplete = false;
                    await ClearGraph();

                    searchAMR.start_year = iYearFrom;
                    searchAMR.end_year = iYearTo;

                    // y-axis
                    if (selectedSIRValue == eSIRValue.S)
                    {
                        SIRText = "%S";
                        TitleChart = "Susceptibility of ";
                    }
                    else if (selectedSIRValue == eSIRValue.I)
                    {
                        SIRText = "%I";
                        TitleChart = "Intermediate of ";
                    }
                    else
                    {
                        SIRText = "%R";
                        TitleChart = "Resistance of ";
                    }

                  
                    // 1 or หลาย เชื้อ : 1 ยา >> series เชื้อ
                    if (multipleSelectedOrg.Count() > 0 && multipleSelectedAnti.Count() == 1)
                    {
                        DataReport dtReport = new DataReport { };
                        List<DataReport> EnumList = new List<DataReport>();
                        List<SP_AntimicrobialResistanceDTO> objAMRSearchResult;

                        dictSeries.Clear();
                        dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                        var antiName = AntibioticMaster.Find(f => f.ant_code == multipleSelectedAnti.FirstOrDefault()).ant_name;

                        if (selectedSubGraph == eSubGraph.None)
                        {
                            if (!blnUpdate)
                            {
                                AMRData = await ReportService.GetAMROverallByHospModelAsync(searchAMR);
                                LoadAMRData = selectedSubGraph;
                                blnUpdate = true;
                            }

                            //searchAMR.org_codes = string.Join(",", multipleSelectedOrg);
                            //searchAMR.anti_codes = string.Join(",", multipleSelectedAnti);

                            objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                   && (multipleSelectedOrg.Contains(w.org_name))
                                                   && (multipleSelectedAnti.Contains(w.anti_code))
                                                   ).OrderBy(o => o.org_code).ToList();

                            foreach (var objOrg in multipleSelectedOrg)
                            {
                                if (!dictSeries.ContainsKey(objOrg))
                                {
                                    EnumList = new List<DataReport>();
                                    for (var i = iYearFrom; i <= iYearTo; i++)
                                    {
                                        var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                        EnumList.Add(newdata);
                                    }
                                    dictSeries.Add(objOrg, EnumList);
                                }
                            }

                            foreach (var obj in objAMRSearchResult)
                            {

                                var obe = dictSeries[obj.org_name].Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                if (obe != null)
                                {
                                    if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                    else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                    else { obe.SIR = obj.percent_r; }
                                }
                            }

                            var title = string.Join(" and ", multipleSelectedOrg);
                            chartName1 = multipleSelectedOrg.FirstOrDefault();
                            TitleChart = TitleChart + antiName;//+ " to " + title
                        }

                        // have sub graph
                        else
                        {
                            if (selectedSubGraph == eSubGraph.Specimen)
                            {

                                if (multipleSelectedSpecimen.Count() == 0)
                                {
                                    await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 Specimen");
                                    goto EndPoint;
                                }

                                dictSeries.Clear();
                                dictSubMain.Clear();
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
                                List<SP_AntimicrobialResistanceDTO> objSpc = new List<SP_AntimicrobialResistanceDTO>();

                                if (!blnUpdate)
                                {
                                    AMRData = await ReportService.GetAMRSpecimenByHospModelAsync(searchAMR);
                                    LoadAMRData = selectedSubGraph;
                                    blnUpdate = true;
                                }
                                objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                       && (multipleSelectedOrg.Contains(w.org_name))
                                                       && (multipleSelectedAnti.Contains(w.anti_code))
                                                       ).OrderBy(o => o.org_code).ToList();

                                foreach (var orgn in multipleSelectedOrg)
                                {
                                    dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                    var orgName = orgn;
                                    if (!dictSubMain.ContainsKey(orgName)) { dictSubMain.Add(orgName, dictSeries); }

                                    foreach (var spcCode in multipleSelectedSpecimen)
                                    {
                                        objSpc = objAMRSearchResult.Where(w => w.org_name == orgn
                                                                            && w.spc_code == spcCode
                                                                            ).ToList();

                                        chartName1 = orgn;
                                        EnumList = new List<DataReport>();
                                        for (var i = iYearFrom; i <= iYearTo; i++)
                                        {
                                            var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                            EnumList.Add(newdata);
                                        }
                                        var spcName = SpecimenMaster.Find(t => t.spc_code == spcCode).spc_name;
                                        dictSeries.Add(spcName, EnumList);

                                        foreach (var obj in objSpc)
                                        {
                                            var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                            if (obe != null)
                                            {
                                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                else { obe.SIR = obj.percent_r; }
                                            }

                                        } // end objSpc1
                                    }
                                }

                                var SelectdAntiDesc = new List<string>();
                                foreach (var SelectedAntiCode in multipleSelectedAnti)
                                {
                                    var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                                    if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                                    else { SelectdAntiDesc.Add(SelectedAntiCode); }
                                }

                                var title = string.Format("{0} to {1} by Specimen", SelectdAntiDesc.FirstOrDefault(), string.Join(",", multipleSelectedOrg));
                                TitleChart = TitleChart + title;
                            } // end sub graph : specimen

                            if (selectedSubGraph == eSubGraph.Ward)
                            {
                                if (multipleSelectedWardType.Count() == 0)
                                {
                                    await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 Ward Type");
                                    goto EndPoint;
                                }

                                dictSeries.Clear();
                                dictSubMain.Clear();
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
                                List<SP_AntimicrobialResistanceDTO> objWard = new List<SP_AntimicrobialResistanceDTO>();

                                if (!blnUpdate)
                                {
                                    AMRData = await ReportService.GetAMRWardTypeByHospModelAsync(searchAMR);
                                    LoadAMRData = selectedSubGraph;
                                    blnUpdate = true;
                                }
                                objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                       && (multipleSelectedOrg.Contains(w.org_name))
                                                       && (multipleSelectedAnti.Contains(w.anti_code))
                                                       ).OrderBy(o => o.org_code).ToList();
                                foreach (var orgn in multipleSelectedOrg)
                                {
                                    dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                    var orgName = orgn;
                                    if (!dictSubMain.ContainsKey(orgName))
                                    {
                                        dictSubMain.Add(orgName, dictSeries);
                                    }

                                    foreach (var wardCode in multipleSelectedWardType)
                                    {
                                        objWard = objAMRSearchResult.Where(w => w.org_name == orgn
                                                                            && w.ward_type == wardCode
                                                                            ).ToList();

                                        chartName1 = orgn;
                                        EnumList = new List<DataReport>();
                                        for (var i = iYearFrom; i <= iYearTo; i++)
                                        {
                                            var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                            EnumList.Add(newdata);
                                        }

                                        dictSeries.Add(wardCode, EnumList);

                                        foreach (var obj in objWard)
                                        {
                                            var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                            if (obe != null)
                                            {
                                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                else { obe.SIR = obj.percent_r; }
                                            }

                                        } // end objSpc1

                                    }
                                }

                                var SelectdAntiDesc = new List<string>();
                                foreach (var SelectedAntiCode in multipleSelectedAnti)
                                {
                                    var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                                    if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                                    else { SelectdAntiDesc.Add(SelectedAntiCode); }
                                }

                                var title = string.Format("{0} to {1} by Ward Type", SelectdAntiDesc.FirstOrDefault(), string.Join(",", multipleSelectedOrg));
                                TitleChart = TitleChart + title;
                            } // end sub graph : Ward Type
                        }
                    }

                    // 1 เชื้อ : หลาย ยา >> series ยา
                    else if (multipleSelectedOrg.Count() == 1 && multipleSelectedAnti.Count() > 1)
                    {

                        var orgName = multipleSelectedOrg.FirstOrDefault(); //OrganismGroupMaster.Find(f => f.organisms == multipleSelectedOrg.FirstOrDefault()).grp_organism_label;

                        List<SP_AntimicrobialResistanceDTO> objAMRSearchResult;

                        DataReport dtReport = new DataReport { };
                        List<DataReport> EnumList = new List<DataReport>();
                        dictSeries.Clear();
                        dictSeries = new Dictionary<string, IEnumerable<DataReport>>();

                        if (selectedSubGraph == eSubGraph.None)
                        {
                            if (!blnUpdate)
                            {
                                AMRData = await ReportService.GetAMROverallByHospModelAsync(searchAMR);
                                LoadAMRData = selectedSubGraph;
                                blnUpdate = true;
                            }

                            //searchAMR.org_codes = string.Join(",", multipleSelectedOrg);
                            //searchAMR.anti_codes = string.Join(",", multipleSelectedAnti);
                            objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                   && (multipleSelectedOrg.Contains(w.org_name))
                                                   && (multipleSelectedAnti.Contains(w.anti_code))
                                                   ).OrderBy(o => o.anti_code).ToList();

                            foreach (var objAntCode in multipleSelectedAnti)
                            {
                                var drugName = AntibioticMaster.Find(f => f.ant_code == objAntCode).ant_name;
                                if (!dictSeries.ContainsKey(drugName))
                                {
                                    EnumList = new List<DataReport>();
                                    for (var i = iYearFrom; i <= iYearTo; i++)
                                    {
                                        var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                        EnumList.Add(newdata);
                                    }
                                    dictSeries.Add(drugName, EnumList);
                                }
                            }


                            foreach (var objAMR in objAMRSearchResult)
                            {
                                var obe = dictSeries[objAMR.anti_name.ToUpper()].Where(w => w.Year == objAMR.year.ToString()).FirstOrDefault();
                                if (obe != null)
                                {
                                    if (selectedSIRValue == eSIRValue.S) { obe.SIR = objAMR.percent_s; }
                                    else if (selectedSIRValue == eSIRValue.I) { obe.SIR = objAMR.percent_i; }
                                    else { obe.SIR = objAMR.percent_r; }
                                }
                            }

                            var title = string.Join(" and ", multipleSelectedOrg);
                            chartName1 = multipleSelectedOrg.FirstOrDefault();
                            TitleChart = TitleChart + title;
                        }

                        else
                        {
                            if (selectedSubGraph == eSubGraph.Specimen)
                            {

                                if (multipleSelectedSpecimen.Count() == 0)
                                {
                                    await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 specimen");
                                    goto EndPoint;
                                }

                                dictSeries.Clear();
                                dictSubMain.Clear();
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
                                List<SP_AntimicrobialResistanceDTO> objSpc = new List<SP_AntimicrobialResistanceDTO>();

                                if (!blnUpdate)
                                {
                                    AMRData = await ReportService.GetAMRSpecimenByHospModelAsync(searchAMR);
                                    LoadAMRData = selectedSubGraph;
                                    blnUpdate = true;
                                }
                                //searchAMR.org_codes = string.Join(",", multipleSelectedOrg);
                                //searchAMR.anti_codes = string.Join(",", multipleSelectedAnti);
                                objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                  && (multipleSelectedOrg.Contains(w.org_name))
                                                  && (multipleSelectedAnti.Contains(w.anti_code))
                                                  ).OrderBy(o => o.anti_code).ToList();

                                foreach (var drug in multipleSelectedAnti)
                                {
                                    var drugName = AntibioticMaster.Find(f => f.ant_code == drug).ant_name;
                                    dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                    if (!dictSubMain.ContainsKey(drugName))
                                    {
                                        dictSubMain.Add(drugName, dictSeries);
                                    }

                                    foreach (var spcCode in multipleSelectedSpecimen)
                                    {
                                        objSpc = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()
                                                                            && w.spc_code == spcCode
                                                                            ).ToList();

                                        chartName1 = drug;
                                        EnumList = new List<DataReport>();
                                        for (var i = iYearFrom; i <= iYearTo; i++)
                                        {
                                            var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                            EnumList.Add(newdata);
                                        }
                                        var spcName = SpecimenMaster.Find(t => t.spc_code == spcCode).spc_name;
                                        dictSeries.Add(spcName, EnumList);

                                        foreach (var obj in objSpc)
                                        {
                                            var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                            if (obe != null)
                                            {
                                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                else { obe.SIR = obj.percent_r; }
                                            }

                                        } // end objSpc1
                                    }
                                }

                                var SelectdAntiDesc = new List<string>();
                                foreach (var SelectedAntiCode in multipleSelectedAnti)
                                {
                                    var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                                    if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                                    else { SelectdAntiDesc.Add(SelectedAntiCode); }
                                }

                                var title = string.Format("{0} to {1} by Specimen", multipleSelectedOrg.FirstOrDefault(), string.Join(",", SelectdAntiDesc));
                                TitleChart = TitleChart + title;
                            } // end sub graph : specimen

                            if (selectedSubGraph == eSubGraph.Ward)
                            {

                                if (multipleSelectedWardType.Count() == 0)
                                {
                                    await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 Ward");
                                    goto EndPoint;
                                }

                                dictSeries.Clear();
                                dictSubMain.Clear();
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();
                                List<SP_AntimicrobialResistanceDTO> objWard = new List<SP_AntimicrobialResistanceDTO>();

                                if (!blnUpdate)
                                {
                                    AMRData = await ReportService.GetAMRWardTypeByHospModelAsync(searchAMR);
                                    LoadAMRData = selectedSubGraph;
                                    blnUpdate = true;
                                }
                                objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                    && (multipleSelectedOrg.Contains(w.org_name))
                                                    && (multipleSelectedAnti.Contains(w.anti_code))
                                                    ).OrderBy(o => o.anti_code).ToList();

                                foreach (var drug in multipleSelectedAnti)
                                {
                                    var drugName = AntibioticMaster.Find(f => f.ant_code == drug).ant_name;
                                    dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                    if (!dictSubMain.ContainsKey(drugName))
                                    {
                                        dictSubMain.Add(drugName, dictSeries);
                                    }

                                    foreach (var wardCode in multipleSelectedWardType)
                                    {
                                        objWard = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()
                                                                            && w.ward_type == wardCode
                                                                            ).ToList();

                                        chartName1 = drug;
                                        EnumList = new List<DataReport>();
                                        for (var i = iYearFrom; i <= iYearTo; i++)
                                        {
                                            var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                            EnumList.Add(newdata);
                                        }

                                        dictSeries.Add(wardCode, EnumList);

                                        foreach (var obj in objWard)
                                        {
                                            var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                            if (obe != null)
                                            {
                                                if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                else { obe.SIR = obj.percent_r; }
                                            }

                                        } // end objSpc1
                                    }
                                }

                                var SelectdAntiDesc = new List<string>();
                                foreach (var SelectedAntiCode in multipleSelectedAnti)
                                {
                                    var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                                    if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                                    else { SelectdAntiDesc.Add(SelectedAntiCode); }
                                }

                                var title = string.Format("{0} to {1} by Ward Type", multipleSelectedOrg.FirstOrDefault(), string.Join(",", SelectdAntiDesc));
                                TitleChart = TitleChart + title;
                            } // end sub graph : Ward Type
                        }
                    }

                    // หลาย เชื้อ : หลาย ยา >> show series เชื้อ
                    else if (multipleSelectedOrg.Count() > 1 && multipleSelectedAnti.Count() > 1)
                    {

                        List<SP_AntimicrobialResistanceDTO> objAMRSearchResult;

                        dictSeries.Clear();
                        dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                        List<DataReport> EnumList = new List<DataReport>();
                        List<SP_AntimicrobialResistanceDTO> objOrg = new List<SP_AntimicrobialResistanceDTO>();
                        List<SP_AntimicrobialResistanceDTO> objSpc = new List<SP_AntimicrobialResistanceDTO>();
                        List<SP_AntimicrobialResistanceDTO> objWard = new List<SP_AntimicrobialResistanceDTO>();
                        // จำนวนกราฟ = จำนวนยา
                        if (selectedSubGraph == eSubGraph.None)
                        {

                            if (!blnUpdate)
                            {
                                AMRData = await ReportService.GetAMROverallByHospModelAsync(searchAMR);
                                LoadAMRData = selectedSubGraph;
                                blnUpdate = true;
                            }
                            //searchAMR.org_codes = string.Join(",", multipleSelectedOrg);
                            //searchAMR.anti_codes = string.Join(",", multipleSelectedAnti);
                            objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                   && (multipleSelectedOrg.Contains(w.org_name))
                                                   && (multipleSelectedAnti.Contains(w.anti_code))
                                                   ).OrderBy(o => o.org_code).ToList();

                            foreach (var drug in multipleSelectedAnti)
                            {
                                var drugName = AntibioticMaster.Find(f => f.ant_code.ToUpper() == drug.ToUpper()).ant_name;

                                objOrg = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()).ToList();
                                dictSeries = new Dictionary<string, IEnumerable<DataReport>>();

                                if (!dictSubMain.ContainsKey(drugName)) { dictSubMain.Add(drugName, dictSeries); }

                                foreach (var orgn in multipleSelectedOrg)
                                {
                                    EnumList = new List<DataReport>();
                                    for (var i = iYearFrom; i <= iYearTo; i++)
                                    {
                                        var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                        EnumList.Add(newdata);
                                    }

                                    var objOO = objOrg.Where(w => w.org_name == orgn).ToList();

                                    foreach (var obj in objOO)
                                    {
                                        if (!dictSeries.ContainsKey(obj.org_name)) { dictSeries.Add(obj.org_name, EnumList); };

                                        var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                        if (obe != null)
                                        {
                                            if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                            else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                            else { obe.SIR = obj.percent_r; }
                                        }
                                    }
                                }
                            }
                        }

                        // จำนวนกราฟ = จำนวนยา x จำนวนเชื้อ
                        if (selectedSubGraph == eSubGraph.Specimen)
                        {
                            if (multipleSelectedSpecimen.Count() == 0)
                            {
                                await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 specimen");
                                goto EndPoint;
                            }

                            if (!blnUpdate)
                            {
                                AMRData = await ReportService.GetAMRSpecimenByHospModelAsync(searchAMR);
                                LoadAMRData = selectedSubGraph;
                                blnUpdate = true;
                            }
                            objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                   && (multipleSelectedOrg.Contains(w.org_name))
                                                   && (multipleSelectedAnti.Contains(w.anti_code))
                                                   ).OrderBy(o => o.org_code).ToList();

                            foreach (var drug in multipleSelectedAnti)
                            {
                                objOrg = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()).ToList();
                                dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();

                                var drugName = AntibioticMaster.Find(f => f.ant_code == drug).ant_name;
                                if (!dictDrugMain.ContainsKey(drugName)) { dictDrugMain.Add(drugName, dictSubMain); }

                                foreach (var orgn in multipleSelectedOrg)
                                {
                                    dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                    var orgName = orgn;//OrganismGroupMaster.Find(f => f.organisms == orgn).grp_organism_label;
                                    if (!dictSubMain.ContainsKey(orgName)) { dictSubMain.Add(orgName, dictSeries); }

                                    foreach (var spcCode in multipleSelectedSpecimen)
                                    {
                                        objSpc = objOrg.Where(w => w.spc_code == spcCode && w.org_name == orgn
                                                               ).ToList();

                                        EnumList = new List<DataReport>();
                                        for (var i = iYearFrom; i <= iYearTo; i++)
                                        {
                                            var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                            EnumList.Add(newdata);
                                        }
                                        var spcName = SpecimenMaster.Find(t => t.spc_code == spcCode).spc_name;
                                        dictSeries.Add(spcName, EnumList);

                                        foreach (var obj in objSpc)
                                        {
                                            if (!dictSeries.ContainsKey(spcName))
                                            {
                                                var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                                if (obe != null)
                                                {
                                                    if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                    else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                    else { obe.SIR = obj.percent_r; }
                                                }
                                            }

                                            else
                                            {
                                                var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                                if (obe != null)
                                                {
                                                    if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                    else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                    else { obe.SIR = obj.percent_r; }
                                                }
                                            }

                                        }

                                    }
                                }
                            }
                        }
                        // จำนวนกราฟ = จำนวนยา x จำนวนเชื้อ
                        if (selectedSubGraph == eSubGraph.Ward)
                        {
                            if (multipleSelectedWardType.Count() == 0)
                            {
                                await JSRuntime.InvokeAsync<object>("ShowAlert", "Please Select at least 1 ward");
                                goto EndPoint;
                            }

                            if (!blnUpdate)
                            {
                                AMRData = await ReportService.GetAMRWardTypeByHospModelAsync(searchAMR);
                                LoadAMRData = selectedSubGraph;
                                blnUpdate = true;

                            }
                            objAMRSearchResult = AMRData.Where(w => (w.year >= searchAMR.start_year && w.year <= searchAMR.end_year)
                                                   && (multipleSelectedOrg.Contains(w.org_name))
                                                   && (multipleSelectedAnti.Contains(w.anti_code))
                                                   ).OrderBy(o => o.org_code).ToList();

                            foreach (var drug in multipleSelectedAnti)
                            {
                                objOrg = objAMRSearchResult.Where(w => w.anti_code.ToUpper() == drug.ToUpper()).ToList();
                                dictSubMain = new Dictionary<string, Dictionary<string, IEnumerable<DataReport>>>();

                                var drugName = AntibioticMaster.Find(f => f.ant_code == drug).ant_name;
                                if (!dictDrugMain.ContainsKey(drugName))
                                {
                                    dictDrugMain.Add(drugName, dictSubMain);
                                }

                                foreach (var orgn in multipleSelectedOrg)
                                {
                                    dictSeries = new Dictionary<string, IEnumerable<DataReport>>();
                                    var orgName = orgn;//OrganismGroupMaster.Find(f => f.organisms == orgn).grp_organism_label;
                                    if (!dictSubMain.ContainsKey(orgName)) { dictSubMain.Add(orgName, dictSeries); }

                                    foreach (var wardCode in multipleSelectedWardType)
                                    {
                                        objWard = objOrg.Where(w => w.ward_type == wardCode && w.org_name == orgn
                                                               ).ToList();

                                        EnumList = new List<DataReport>();
                                        for (var i = iYearFrom; i <= iYearTo; i++)
                                        {
                                            var newdata = new DataReport { Year = i.ToString(), SIR = 0 };
                                            EnumList.Add(newdata);
                                        }

                                        dictSeries.Add(wardCode, EnumList);

                                        foreach (var obj in objWard)
                                        {
                                            if (!dictSeries.ContainsKey(wardCode))
                                            {
                                                var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                                if (obe != null)
                                                {
                                                    if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                    else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                    else { obe.SIR = obj.percent_r; }
                                                }
                                            }

                                            else
                                            {
                                                var obe = EnumList.Where(w => w.Year == obj.year.ToString()).FirstOrDefault();
                                                if (obe != null)
                                                {
                                                    if (selectedSIRValue == eSIRValue.S) { obe.SIR = obj.percent_s; }
                                                    else if (selectedSIRValue == eSIRValue.I) { obe.SIR = obj.percent_i; }
                                                    else { obe.SIR = obj.percent_r; }
                                                }
                                            }

                                        }

                                    }
                                }
                            }
                        }

                        var SelectdAntiDesc = new List<string>();
                        foreach (var SelectedAntiCode in multipleSelectedAnti)
                        {
                            var desc = AntibioticMaster.Find(t => t.ant_code == SelectedAntiCode);
                            if (desc != null) { SelectdAntiDesc.Add(desc.ant_name); }
                            else { SelectdAntiDesc.Add(SelectedAntiCode); }
                        }

                        var title = string.Format("{0} to {1}", string.Join(",", multipleSelectedOrg), string.Join(",", SelectdAntiDesc));
                        TitleChart = TitleChart + title;
                    }

                    EndPoint:
                    blnLoadData = true;
                    blnLoadComplete = true;

                }
            }

        } // end GraphResult

        string FormatValue(object value)
        {
            return String.Format("{0:0.00}%", (double)value);
        }

        private async Task ChangeSubGraph()
        {
            if (selectedSubGraph == eSubGraph.Specimen)
            {
                multipleSelectedWardType = Enumerable.Empty<string>();
            }
            else if (selectedSubGraph == eSubGraph.Ward)
            {
                multipleSelectedSpecimen = Enumerable.Empty<string>();
            }
            else if (selectedSubGraph == eSubGraph.None || selectedSubGraph == eSubGraph.NA)
            {
                multipleSelectedSpecimen = Enumerable.Empty<string>();
                multipleSelectedWardType = Enumerable.Empty<string>();
            }
            blnUpdate = false;
            StateHasChanged();
        }

        private void DDL_Change(string ddl_name, object value)
        {
            if (ddl_name == "Arh" && value == null)
            {
                searchAMR.prv_code = null;
                searchAMR.hos_code = null;
            }
            else if (ddl_name == "Prv" && value == null)
            {
                searchAMR.hos_code = null;
            }
            else if (ddl_name == "Prv" && value != null)
            {
                var prv_select = lab_ddl_List.FirstOrDefault(x => x.prv_code == value.ToString());

                searchAMR.arh_code = prv_select.arh_code;
            }
            else if (ddl_name == "Hos" && value == null)
            {
                //searchModel.mps_lab = null;
            }
            else if (ddl_name == "Hos" && value != null)
            {
                var hos_select = lab_ddl_List.FirstOrDefault(x => x.hos_code == value.ToString());

                searchAMR.prv_code = hos_select.prv_code;
                searchAMR.arh_code = hos_select.arh_code;
            }

            StateHasChanged();
        }
    

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private DropDownListDataService ddlDataService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ColumnConfigService columnConfigService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ReportService antihosp { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private MasterTemplateService masterTemplateService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFileSave OIFileSave { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SpecimenService specimenService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AntibioticService antibioticService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private OrganismService organismService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ConfigDataService configDataService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AMPService ReportService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
namespace __Blazor.ALISS.Pages.P6_Report.Antibiotrend.AMRGraphByHosp
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateRadzenRadioButtonListItem_0<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_1<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_2<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_3<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_4<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenListBox_5<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::Radzen.FilterCaseSensitivity __arg1, int __seq2, global::System.Boolean __arg2, int __seq3, global::System.Collections.IEnumerable __arg3, int __seq4, global::System.String __arg4, int __seq5, global::System.Object __arg5, int __seq6, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg6, int __seq7, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg7)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenListBox<TValue>>(seq);
        __builder.AddAttribute(__seq0, "AllowFiltering", __arg0);
        __builder.AddAttribute(__seq1, "FilterCaseSensitivity", __arg1);
        __builder.AddAttribute(__seq2, "Multiple", __arg2);
        __builder.AddAttribute(__seq3, "Data", __arg3);
        __builder.AddAttribute(__seq4, "Style", __arg4);
        __builder.AddAttribute(__seq5, "Value", __arg5);
        __builder.AddAttribute(__seq6, "ValueChanged", __arg6);
        __builder.AddAttribute(__seq7, "ValueExpression", __arg7);
        __builder.CloseComponent();
        }
        public static void CreateRadzenListBox_6<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::Radzen.FilterCaseSensitivity __arg1, int __seq2, global::System.Boolean __arg2, int __seq3, global::System.Collections.IEnumerable __arg3, int __seq4, global::System.String __arg4, int __seq5, global::System.String __arg5, int __seq6, global::System.String __arg6, int __seq7, global::System.Object __arg7, int __seq8, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg8, int __seq9, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg9)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenListBox<TValue>>(seq);
        __builder.AddAttribute(__seq0, "AllowFiltering", __arg0);
        __builder.AddAttribute(__seq1, "FilterCaseSensitivity", __arg1);
        __builder.AddAttribute(__seq2, "Multiple", __arg2);
        __builder.AddAttribute(__seq3, "Data", __arg3);
        __builder.AddAttribute(__seq4, "TextProperty", __arg4);
        __builder.AddAttribute(__seq5, "ValueProperty", __arg5);
        __builder.AddAttribute(__seq6, "Style", __arg6);
        __builder.AddAttribute(__seq7, "Value", __arg7);
        __builder.AddAttribute(__seq8, "ValueChanged", __arg8);
        __builder.AddAttribute(__seq9, "ValueExpression", __arg9);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_7<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_8<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenRadioButtonListItem_9<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, TValue __arg1)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenRadioButtonListItem<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Text", __arg0);
        __builder.AddAttribute(__seq1, "Value", __arg1);
        __builder.CloseComponent();
        }
        public static void CreateRadzenListBox_10<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::System.Boolean __arg1, int __seq2, global::System.Collections.IEnumerable __arg2, int __seq3, global::System.String __arg3, int __seq4, global::System.String __arg4, int __seq5, global::System.String __arg5, int __seq6, global::System.Object __arg6, int __seq7, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg7, int __seq8, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg8)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenListBox<TValue>>(seq);
        __builder.AddAttribute(__seq0, "AllowFiltering", __arg0);
        __builder.AddAttribute(__seq1, "Multiple", __arg1);
        __builder.AddAttribute(__seq2, "Data", __arg2);
        __builder.AddAttribute(__seq3, "TextProperty", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.AddAttribute(__seq5, "Style", __arg5);
        __builder.AddAttribute(__seq6, "Value", __arg6);
        __builder.AddAttribute(__seq7, "ValueChanged", __arg7);
        __builder.AddAttribute(__seq8, "ValueExpression", __arg8);
        __builder.CloseComponent();
        }
        public static void CreateRadzenListBox_11<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::System.Boolean __arg1, int __seq2, global::System.Collections.IEnumerable __arg2, int __seq3, global::System.String __arg3, int __seq4, global::System.Object __arg4, int __seq5, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg5, int __seq6, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg6)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenListBox<TValue>>(seq);
        __builder.AddAttribute(__seq0, "AllowFiltering", __arg0);
        __builder.AddAttribute(__seq1, "Multiple", __arg1);
        __builder.AddAttribute(__seq2, "Data", __arg2);
        __builder.AddAttribute(__seq3, "Style", __arg3);
        __builder.AddAttribute(__seq4, "Value", __arg4);
        __builder.AddAttribute(__seq5, "ValueChanged", __arg5);
        __builder.AddAttribute(__seq6, "ValueExpression", __arg6);
        __builder.CloseComponent();
        }
        public static void CreateRadzenLineSeries_12<TItem>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<TItem> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::Radzen.Blazor.LineType __arg3, int __seq4, global::System.String __arg4, int __seq5, global::Microsoft.AspNetCore.Components.RenderFragment __arg5)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenLineSeries<TItem>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CategoryProperty", __arg1);
        __builder.AddAttribute(__seq2, "Title", __arg2);
        __builder.AddAttribute(__seq3, "LineType", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.AddAttribute(__seq5, "ChildContent", __arg5);
        __builder.CloseComponent();
        }
        public static void CreateRadzenLineSeries_13<TItem>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<TItem> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::Radzen.Blazor.LineType __arg3, int __seq4, global::System.String __arg4, int __seq5, global::Microsoft.AspNetCore.Components.RenderFragment __arg5)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenLineSeries<TItem>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CategoryProperty", __arg1);
        __builder.AddAttribute(__seq2, "Title", __arg2);
        __builder.AddAttribute(__seq3, "LineType", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.AddAttribute(__seq5, "ChildContent", __arg5);
        __builder.CloseComponent();
        }
        public static void CreateRadzenColumnSeries_14<TItem>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<TItem> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::Radzen.Blazor.LineType __arg3, int __seq4, global::System.String __arg4)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenColumnSeries<TItem>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CategoryProperty", __arg1);
        __builder.AddAttribute(__seq2, "Title", __arg2);
        __builder.AddAttribute(__seq3, "LineType", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.CloseComponent();
        }
        public static void CreateRadzenColumnSeries_15<TItem>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<TItem> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::Radzen.Blazor.LineType __arg3, int __seq4, global::System.String __arg4)
        {
        __builder.OpenComponent<global::Radzen.Blazor.RadzenColumnSeries<TItem>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CategoryProperty", __arg1);
        __builder.AddAttribute(__seq2, "Title", __arg2);
        __builder.AddAttribute(__seq3, "LineType", __arg3);
        __builder.AddAttribute(__seq4, "ValueProperty", __arg4);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
