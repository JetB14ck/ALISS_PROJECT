// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ALISS.Pages.P3_Process
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Microsoft.AspNetCore.HttpOverrides;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Blazored.Menu;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using BlazorDownloadFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.Account;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.DropDownList.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.LoginManagement.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Master.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Process.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.AUTH.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.MasterManagement.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.UserManagement.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.HISUpload.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 35 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.ANTIBIOGRAM.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 36 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.ANTIBIOTREND.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 37 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.GLASS.DTO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 39 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D0_Master;

#line default
#line hidden
#nullable disable
#nullable restore
#line 41 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D3_Process;

#line default
#line hidden
#nullable disable
#nullable restore
#line 42 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D4_UserManagement.AUTH;

#line default
#line hidden
#nullable disable
#nullable restore
#line 43 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D4_UserManagement.MasterManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 44 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D4_UserManagement.UserManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 46 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D5_HISData;

#line default
#line hidden
#nullable disable
#nullable restore
#line 47 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D6_Report.Antibiogram;

#line default
#line hidden
#nullable disable
#nullable restore
#line 48 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D6_Report.Antibiotrend;

#line default
#line hidden
#nullable disable
#nullable restore
#line 49 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\_Imports.razor"
using ALISS.Data.D6_Report.Glass;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P3_Process\ProcessRequest.razor"
using System.IO;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/ProcessRequest")]
    public partial class ProcessRequest : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 296 "D:\G-able\Projects\ALISS\Project\Current\ALISS_PROJECT\ALISS\Pages\P3_Process\ProcessRequest.razor"
       
    [CascadingParameter] MainLayout mainLayout { get; set; }

    private ConfigData configData = new ConfigData();
    private string classLabel = "col-4";
    private string classInput = "col-8";
    private bool ShowPopupDialog;

    private RadzenGridCustom<ProcessRequestDTO> inboxGrid = new RadzenGridCustom<ProcessRequestDTO>();
    private ProcessRequestDTO searchModel = new ProcessRequestDTO();
    private List<ProcessRequestDTO> searchResultList_All, searchResultList;

    private List<HospitalLabDataDTO> lab_ddl_List;
    private List<ParameterDTO> prm_ddl_List;
    private List<SpecimenDTO> spc_ddl_List;
    private List<DropDownListDTO> month_List;
    private List<DropDownListDTO> year_List;
    private double DownloadProg = 0;


    private bool pageLoading { get { return (searchResultList == null); } }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await mainLayout.GetLoginUser();

            if (mainLayout.loginUser.CheckPagePermission("MNU_0601") == false) navigationManager.NavigateTo("/NoPermissionPage");

            configData.ConfigDTOList = await configDataService.Get_TBConfig_DataList_Async(new TBConfigDTO() { tbc_mnu_code = "MNU_0601" });

            var searchData = new HospitalLabDataDTO()
            {
                arh_code = searchModel.pcr_arh_code = mainLayout.loginUser.arh_code,
                prv_code = searchModel.pcr_prv_code = mainLayout.loginUser.prv_code,
                hos_code = searchModel.pcr_hos_code = mainLayout.loginUser.hos_code
            };
            lab_ddl_List = await ddlDataService.GetAllLabListByModelAsync(searchData);
            prm_ddl_List = await ddlDataService.GetParameterListByModelAsync("R01");
            spc_ddl_List = await specimenService.GetListByModelActiveAsync(new SpecimenDTO());
            month_List = ddlDataService.GetMonthList();
            year_List = ddlDataService.GetYearList();

            searchResultList_All = searchResultList = await processRequestService.GetListByModelAsync(searchModel);
        }
    }

    private async void SearchInboxData()
    {
        searchResultList = await processRequestService.GetListByModelAsync(searchModel);
        if (inboxGrid.radzenGrid != null) await inboxGrid.radzenGrid.GoToPage(0);

        StateHasChanged();
    }

    private async void ClearInboxData()
    {
        searchModel = new ProcessRequestDTO();

        searchResultList = await processRequestService.GetListByModelAsync(searchModel);
        if (inboxGrid.radzenGrid != null) await inboxGrid.radzenGrid.GoToPage(0);

        StateHasChanged();
    }

    private void DDL_Year_Change()
    {
        year_List = ddlDataService.GetYearList(searchModel.pcr_year);

        StateHasChanged();
    }

    private void DDL_Change(string ddl_name, object value)
    {
        if (ddl_name == "Arh" && value == null)
        {
            searchModel.pcr_prv_code = null;
            searchModel.pcr_hos_code = null;
        }
        else if (ddl_name == "Prv" && value != null)
        {
            var prv_select = lab_ddl_List.FirstOrDefault(x => x.prv_code == value.ToString());

            searchModel.pcr_arh_code = prv_select.arh_code;
            searchModel.pcr_hos_code = null;
        }
        else if (ddl_name == "Prv" && value == null)
        {
            searchModel.pcr_hos_code = null;
        }
        else if (ddl_name == "Hos" && value != null)
        {
            var hos_select = lab_ddl_List.FirstOrDefault(x => x.hos_code == value.ToString());

            searchModel.pcr_arh_code = hos_select.arh_code;
            searchModel.pcr_prv_code = hos_select.prv_code;
        }

        StateHasChanged();
    }

    private async Task NavigateToDownload(ProcessRequestDTO pcr)
    {
        var filename = $"{pcr.pcr_filename.Replace(System.IO.Path.GetExtension(pcr.pcr_filename), "")}_{DateTime.Now.ToString("yyyyMMdd_HHmmss")}{System.IO.Path.GetExtension(pcr.pcr_filename)}";
        if (pcr.pcr_type == "01")
        {
            byte[] bytes = await fileService.GetFileExcelDownloadAsync("WHONETBackupPath_NARST_Result", "ProcessRequest_NARST_Result", pcr.pcr_filename);

            await downloadService.DownloadFile(filename, bytes, "application/vnd.ms-excel");
        }
        else if (pcr.pcr_type == "02")
        {
            byte[] bytes = await fileService.GetFileZipDownloadAsync("WHONETBackupPath_GLASS_Result", "ProcessRequest_GLASS_Result", pcr.pcr_filename);

            await downloadService.DownloadFile(filename, bytes, "application/octet-stream");
        }
    }

    private async Task NavigateToDownloadFileBeforeWHONET(ProcessRequestDTO pcr)
    {

        DownloadProg = 0;
        //var FullPath = @"D:\WHONETBackupPath\NATION12-NARST-Before.zip";
        //var filename = "NATION12-NARST-Before.zip";
        //byte[] bytes = File.ReadAllBytes(FullPath);

        byte[] bytes = await fileService.GetFileZipDownloadAsync("WHONETBackupPath_NARST_Before", "ProcessRequest_NARST_Before", pcr.pcr_file_before);
        var filename = $"{pcr.pcr_file_before.Replace(System.IO.Path.GetExtension(pcr.pcr_file_before), "")}_{DateTime.Now.ToString("yyyyMMdd_HHmmss")}{System.IO.Path.GetExtension(pcr.pcr_file_before)}";

        int BufferSize = 32768; //Max 32KB
        int LargeSize = 20000000;

        try
        {
            if (bytes.Count() < LargeSize)
            {
                DownloadProg = 50;
                await downloadService.DownloadFile(filename, bytes, "application/octet-stream");
                DownloadProg = 100;
            }
            else
            {
                await DownloadLargeFile(filename, bytes, BufferSize, "application/octet-stream");
            }

        }
        catch (Exception ex)
        {
            var mm = ex;
        }

    }

    private async Task NavigateToDownloadFileAfterWHONET(ProcessRequestDTO pcr)
    {
        DownloadProg = 0;
        //var FullPath = @"D:\WHONETBackupPath\REGION12-NARST-Before.zip";
        //var filename = "REGION12-NARST-Before.zip";
        //byte[] bytes = File.ReadAllBytes(FullPath);

        byte[] bytes = await fileService.GetFileZipDownloadAsync("WHONETBackupPath_NARST_After", "ProcessRequest_NARST_After", pcr.pcr_file_after);
        var filename = $"{pcr.pcr_file_after.Replace(System.IO.Path.GetExtension(pcr.pcr_file_after), "")}_{DateTime.Now.ToString("yyyyMMdd_HHmmss")}{System.IO.Path.GetExtension(pcr.pcr_file_after)}";

        int BufferSize = 32768;
        int LargeSize = 20000000;

        try
        {
            if (bytes.Count() < LargeSize)
            {
                DownloadProg = 50;
                await downloadService.DownloadFile(filename, bytes, "application/octet-stream");
                DownloadProg = 100;
            }
            else
            {
                await DownloadLargeFile(filename, bytes, BufferSize, "application/octet-stream");
            }

        }
        catch (Exception ex)
        {
            var mm = ex;
        }

    }

    private void NavigateToDetailPage(string pcr_code)
    {
        navigationManager.NavigateTo("/ProcessRequest/DataDetail/" + pcr_code);
    }

    private async void NavigateToPublic(string pcr_code)
    {
        //navigationManager.NavigateTo("/ProcessRequest/DataDetail/" + pcr_code);
        var result = await jsRuntime.InvokeAsync<bool>("ShowConfirm", "Do you want to public data?");
        if (result)
        {
            var saveResult = await processRequestService.SaveDataToPublicAsync(pcr_code);

            await jsRuntime.InvokeAsync<object>("ShowAlert", "Public เรียบร้อยแล้ว");
            SearchInboxData();
        }
    }

    private bool ShowDownloadButton(ProcessRequestDTO pcr)
    {
        var result = false;
        if (pcr.pcr_type == "01" && (pcr.pcr_status == "C" || pcr.pcr_status == "P"))
        {
            result = true;
        }
        else if (pcr.pcr_type == "02" && (pcr.pcr_status == "C" || pcr.pcr_status == "P") && pcr.pcr_month_start == "01" && pcr.pcr_month_end == "12" && string.IsNullOrEmpty(pcr.pcr_arh_code))
        {
            result = true;
        }

        return result;
    }

    private bool ShowPublicButton(ProcessRequestDTO pcr)
    {
        var result = false;
        if (pcr.pcr_type == "01" && pcr.pcr_status == "C" && pcr.pcr_month_start == "01" && (pcr.pcr_month_end == "03" || pcr.pcr_month_end == "06" || pcr.pcr_month_end == "09" || pcr.pcr_month_end == "12")) //&& string.IsNullOrEmpty(pcr.pcr_arh_code)
        {
            result = true;
        }
        else if (pcr.pcr_type == "02" && pcr.pcr_status == "C" && pcr.pcr_month_start == "01" && pcr.pcr_month_end == "12" && string.IsNullOrEmpty(pcr.pcr_arh_code))
        {
            result = true;
        }

        return result;
    }

    private async Task DownloadLargeFileXX(string fileName, IEnumerable<byte> bytes, int bufferSize, string contentType = "application/octet-stream")
    {
        DownloadProg = 10;
        await jsRuntime.InvokeVoidAsync("_blazorDownloadFileClearBuffer");
        long percent = 0;
        var bytesReaded = 0;
        var bytesLength = bytes.Count();
        foreach (var partFile in Partition(bytes, bufferSize))
        {
            bytesReaded += partFile.Count;

            percent = bytesReaded * 100 / bytesLength;
            DownloadProg = percent;
            await jsRuntime.InvokeVoidAsync("_blazorDownloadFileBuffersPush", partFile);
        }

        await jsRuntime.InvokeAsync<object>("_blazorDowloadFileByteArrayPartitioned", fileName, contentType);
    }

    public async Task DownloadLargeFile(string fileName, IEnumerable<byte> bytes, int bufferSize, string contentType = "application/octet-stream")
    {
        DownloadProg = 5;
        await jsRuntime.InvokeVoidAsync("_blazorDownloadFileClearBuffer");
        long percent = 0;
        long DownloadBytes = 0;
        var bytesLength = bytes.Count();

        long numChunks = bytesLength / bufferSize;
        var cnt = 5;
        foreach (var partFile in Partition(bytes, bufferSize))
        {
            DownloadBytes += partFile.Count;

            //percent = DownloadBytes * 100 / bytesLength;
            percent = cnt * 100 / numChunks;
            DownloadProg = percent;

            await jsRuntime.InvokeVoidAsync("_blazorDownloadFileBuffersPush", partFile);
            await InvokeAsync(StateHasChanged);
            cnt += 1;
        }

        await jsRuntime.InvokeAsync<object>("_blazorDowloadFileByteArrayPartitioned", fileName, contentType);
    }

    private IEnumerable<IList<T>> Partition<T>(IEnumerable<T> source, int bufferSize)
    {
        for (int i = 0; i < Math.Ceiling(source.Count() / (double)bufferSize); i++)
        {
            yield return new List<T>(source.Skip(bufferSize * i).Take(bufferSize));
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private FileService fileService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBlazorDownloadFileService downloadService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ProcessRequestService processRequestService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SpecimenService specimenService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private DropDownListDataService ddlDataService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ConfigDataService configDataService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
    }
}
#pragma warning restore 1591
